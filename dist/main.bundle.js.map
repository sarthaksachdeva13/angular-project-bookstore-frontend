{"version":3,"sources":["/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src async","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/app.component.css","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/app.component.html","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/app.component.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/app.module.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/app.routing.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-detail/book-detail.component.css","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-detail/book-detail.component.html","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-detail/book-detail.component.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-list-api/book-list-api.component.css","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-list-api/book-list-api.component.html","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-list-api/book-list-api.component.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-list/book-list.component.css","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-list/book-list.component.html","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-list/book-list.component.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-list/data-filter.pipe.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/home/home.component.css","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/home/home.component.html","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/home/home.component.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/my-account/my-account.component.css","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/my-account/my-account.component.html","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/my-account/my-account.component.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/my-profile/my-profile.component.css","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/my-profile/my-profile.component.html","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/my-profile/my-profile.component.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/nav-bar/nav-bar.component.css","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/nav-bar/nav-bar.component.html","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/nav-bar/nav-bar.component.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/order-summary/order-summary.component.css","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/order-summary/order-summary.component.html","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/order-summary/order-summary.component.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/order/order.component.css","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/order/order.component.html","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/order/order.component.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/shopping-cart/shopping-cart.component.css","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/shopping-cart/shopping-cart.component.html","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/shopping-cart/shopping-cart.component.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/constants/app-const.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/billing-address.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/book.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/order.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/payment.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/shipping-address.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/shopping-cart.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/user-billing.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/user-payment.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/user-shipping.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/user.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/book.service.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/cart.service.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/checkout.service.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/login.service.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/order.service.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/payment.service.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/shipping.service.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/user.service.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/environments/environment.ts","/Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<app-nav-bar></app-nav-bar>\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterialModule } from '@angular/material';\nimport { routing } from './app.routing';\nimport 'hammerjs';\n\n\nimport { DataTableModule } from 'angular2-datatable';\nimport { DataFilterPipe } from './components/book-list/data-filter.pipe';\n\n\nimport { LoginService } from './services/login.service';\nimport { UserService } from './services/user.service';\nimport { PaymentService } from './services/payment.service';\nimport { ShippingService } from './services/shipping.service';\nimport { BookService } from './services/book.service';\nimport { CartService } from './services/cart.service';\nimport { OrderService } from './services/order.service';\nimport { CheckoutService } from './services/checkout.service';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { MyAccountComponent } from './components/my-account/my-account.component';\nimport { MyProfileComponent } from './components/my-profile/my-profile.component';\nimport { BookListComponent } from './components/book-list/book-list.component';\nimport { BookDetailComponent } from './components/book-detail/book-detail.component';\nimport { ShoppingCartComponent } from './components/shopping-cart/shopping-cart.component';\nimport { OrderComponent } from './components/order/order.component';\nimport { OrderSummaryComponent } from './components/order-summary/order-summary.component';\nimport { BookListAPIComponent } from './components/book-list-api/book-list-api.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavBarComponent,\n    MyAccountComponent,\n    MyProfileComponent,\n    BookListComponent,\n    DataFilterPipe,\n    BookDetailComponent,\n    ShoppingCartComponent,\n    OrderComponent,\n    OrderSummaryComponent,\n    BookListAPIComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpModule,\n    routing,\n    MaterialModule,\n    DataTableModule\n  ],\n  providers: [\n    LoginService,\n    UserService,\n    PaymentService,\n    ShippingService,\n    BookService,\n    CartService,\n    OrderService,\n    CheckoutService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/app.module.ts","import {ModuleWithProviders} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\n\r\nimport {HomeComponent} from './components/home/home.component';\r\nimport {MyAccountComponent} from './components/my-account/my-account.component';\r\nimport {MyProfileComponent} from './components/my-profile/my-profile.component';\r\nimport {BookListComponent} from './components/book-list/book-list.component';\r\nimport {BookDetailComponent} from './components/book-detail/book-detail.component';\r\nimport {ShoppingCartComponent} from './components/shopping-cart/shopping-cart.component';\r\nimport {OrderComponent} from './components/order/order.component';\r\nimport {OrderSummaryComponent} from './components/order-summary/order-summary.component';\r\nimport {BookListAPIComponent} from './components/book-list-api/book-list-api.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/home',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'myAccount',\r\n    component: MyAccountComponent\r\n  },\r\n  {\r\n    path: 'myProfile',\r\n    component: MyProfileComponent\r\n  },\r\n  {\r\n    path: 'bookList',\r\n    component: BookListComponent\r\n  },\r\n  {\r\n    path: 'bookDetail/:id',\r\n    component: BookDetailComponent\r\n  },\r\n  {\r\n    path: 'shoppingCart',\r\n    component: ShoppingCartComponent\r\n  },\r\n  {\r\n    path: 'checkout',\r\n    component: OrderComponent\r\n  },\r\n  {\r\n    path: 'orderSummary',\r\n    component: OrderSummaryComponent\r\n  },\r\n  {\r\n    path: 'search/:searchQ',\r\n    component: BookListAPIComponent\r\n  }\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/app.routing.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#rowStyle {\\n  margin-top: 120px;\\n}\\n\\n#bookDetailsHeading {\\n  font-family: helvetica, serif;\\n}\\n\\n#imageLogo {\\n  text-align: center;\\n}\\n\\n#bookPanel {\\n  border-width: 5px;\\n  margin-top: 20px;\\n}\\n\\n#addBookSuccess {\\n  color: forestgreen;\\n}\\n\\n#listPrice {\\n  text-decoration: line-through;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-detail/book-detail.component.css\n// module id = ../../../../../src/app/components/book-detail/book-detail.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n\\n    <p style=\\\"text-align:center;\\\">\\n      <img src=\\\"../../../assets/image/logo.png\\\" height=250>\\n    </p>\\n    <div class=\\\"col-xs-8\\\">\\n      <h2 style=\\\"font-family:helvetica;\\\"><span>Book Details</span></h2>\\n    </div>\\n\\n  </div>\\n\\n  <hr class=\\\"style18\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"row\\\" id=\\\"rowStyle\\\">\\n      <div class=\\\"col-xs-3\\\">\\n        <a routerLink=\\\"/bookList\\\">Back to book list</a>\\n        <br/>\\n        <img class=\\\"img-responsive\\\" src=\\\"{{serverPath}}/image/book/{{book.id}}.png\\\"/>\\n      </div>\\n      <div class=\\\"col-xs-9\\\">\\n        <h3><span *ngIf=\\\"addBookSuccess\\\" id=\\\"addBookSuccess\\\">\\n          <i class=\\\"fa fa-check\\\" style=\\\"color:forestgreen\\\"></i>\\n          Added to cart.</span>\\n        </h3>\\n        <h3><span *ngIf=\\\"notEnoughStock\\\"\\n                  style=\\\"color:red\\\">Oops, only <span>{{book.inStockNumber}}</span> In Stock.</span></h3>\\n        <h3>{{book.title}}</h3>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-5\\\">\\n            <h5><strong>Author: </strong><span>{{book.author}}</span></h5>\\n            <p><strong>Publisher:</strong><span>{{book.publisher}}</span></p>\\n            <p><strong>Publication Date:</strong><span>{{book.publicationDate}}</span></p>\\n            <p><strong>Language:</strong><span>{{book.language}}</span></p>\\n            <p><strong>Category:</strong><span>{{book.category}}</span></p>\\n            <p><strong><span>{{book.format}}</span>:</strong> <span>{{book.numberOfPages}}</span> pages</p>\\n            <p><strong>ISBN:</strong> <span>{{book.isbn}}</span></p>\\n            <p><strong>Shipping Weight:</strong> <span>{{book.shippingWeight}}</span> ounces</p>\\n          </div>\\n          <div class=\\\"col-xs-7\\\">\\n            <div class=\\\"panel panel-default\\\" id=\\\"bookPanel\\\">\\n              <div class=\\\"panel-body\\\">\\n                <div class=\\\"col-xs-6\\\">\\n                  <h4>Our Price: <span style=\\\"color: #db3208;\\\">$<span>\\n            \\t\\t\\t\\t\\t\\t{{book.ourPrice | number : '1.2-2'}}\\n            \\t\\t\\t\\t\\t</span></span></h4>\\n                  <p>List Price: <span id=\\\"listPrice\\\">$<span>{{book.listPrice | number : '1.2-2'}}</span></span>\\n                  </p>\\n                  <p>You Save: $<span>{{book.listPrice-book.ourPrice | number : '1.2-2'}}</span></p>\\n                  <span>Qty: </span>\\n                  <select [(ngModel)]=\\\"qty\\\" class=\\\"browser-default\\\" style=\\\"width:50px; display:inline;\\\">\\n                    <option *ngFor=\\\"let x of numberList\\\" [ngValue]=\\\"x\\\">{{x}}</option>\\n                  </select>\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                  <h4 *ngIf=\\\"book.inStockNumber>10\\\" style=\\\"color:green;\\\">In Stock</h4>\\n                  <h4 *ngIf=\\\"book.inStockNumber<10 && book.inStockNumber>0\\\" style=\\\"color:green;\\\">Only <span>{{book.inStockNumber}}</span>\\n                    In Stock</h4>\\n                  <h4 *ngIf=\\\"book.inStockNumber==0\\\" style=\\\"color:darkred;\\\">Unavailable</h4>\\n                  <button md-raised-button [disabled]=\\\"book.inStockNumber==0\\\" (click)=\\\"onAddToCart()\\\"\\n                          class=\\\"mat-primary\\\">Add to Cart\\n                  </button>\\n                </div>\\n              </div>\\n\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <hr/>\\n      <p>{{book.description}}</p>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-detail/book-detail.component.html\n// module id = ../../../../../src/app/components/book-detail/book-detail.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\nimport {Book} from '../../models/book';\nimport {BookService} from '../../services/book.service';\nimport {CartService} from '../../services/cart.service';\nimport {Params, ActivatedRoute, Router} from '@angular/router';\nimport {Http} from '@angular/http';\nimport {AppConst} from '../../constants/app-const';\n\n@Component({\n    selector: 'app-book-detail',\n    templateUrl: './book-detail.component.html',\n    styleUrls: ['./book-detail.component.css']\n})\nexport class BookDetailComponent implements OnInit {\n\n    bookId: number;\n    book: Book = new Book();\n    serverPath = AppConst.serverPath;\n    numberList: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    qty: number;\n\n    addBookSuccess = false;\n    notEnoughStock = false;\n\n    constructor(\n        private bookService: BookService,\n        private cartService: CartService,\n        private router: Router,\n        private http: Http,\n        private route: ActivatedRoute\n    ) {\n    }\n\n    onAddToCart() {\n        this.cartService.addItem(this.bookId, this.qty).subscribe(\n            res => {\n                console.log(res.text());\n                this.addBookSuccess = true;\n            },\n            err => {\n                console.log(err.text());\n                this.notEnoughStock = true;\n            }\n        );\n    }\n\n\n    ngOnInit() {\n        this.route.params.forEach((params: Params) => {\n            this.bookId = Number.parseInt(params['id']);\n        });\n\n        this.bookService.getBook(this.bookId).subscribe(\n            res => {\n                this.book = res.json();\n            },\n            error => {\n                console.log(error);\n            }\n        );\n\n        this.qty = 1;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-detail/book-detail.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#authorName{\\n  color: darkred;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-list-api/book-list-api.component.css\n// module id = ../../../../../src/app/components/book-list-api/book-list-api.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-8\\\">\\n      <h2 style=\\\"font-family:helvetica;\\\"><span>List of Books from Google API</span></h2>\\n    </div>\\n  </div>\\n\\n  <hr class=\\\"style18\\\">\\n\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let book of results.items\\\"\\n        class=\\\"list-group-item\\\">\\n      <img src=\\\"{{book.volumeInfo.imageLinks.smallThumbnail}}\\\"/>\\n      <span>\\n        {{book.volumeInfo.title}} //\\n        <span id=\\\"authorName\\\">Author: </span>{{book.volumeInfo.authors[0]}}\\n      </span>\\n    </li>\\n  </ul>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-list-api/book-list-api.component.html\n// module id = ../../../../../src/app/components/book-list-api/book-list-api.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\nimport {Book} from '../../models/book';\nimport {AppConst} from '../../constants/app-const';\nimport {BookService} from '../../services/book.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Http} from '@angular/http';\n\n@Component({\n    selector: 'app-book-list-api',\n    templateUrl: './book-list-api.component.html',\n    styleUrls: ['./book-list-api.component.css']\n})\nexport class BookListAPIComponent implements OnInit {\n    results = {\n        items: []\n    }\n\n    constructor(\n        private bookService: BookService,\n        private router: Router,\n        private http: Http,\n        private route: ActivatedRoute\n    ) {\n    }\n\n    ngOnInit() {\n        this.route.params.subscribe(params =>\n            this.bookService.searchBookAPI(params['searchQ'])\n                .then(results => this.results = results))\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-list-api/book-list-api.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-list/book-list.component.css\n// module id = ../../../../../src/app/components/book-list/book-list.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n\\n    <p style=\\\"text-align:center;\\\">\\n      <img src=\\\"../../../assets/image/logo.png\\\" height=250>\\n    </p>\\n    <div class=\\\"col-xs-8\\\">\\n      <h2 style=\\\"font-family:helvetica;\\\"><span>List of Books</span></h2>\\n    </div>\\n\\n  </div>\\n\\n  <hr class=\\\"style18\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\"></div>\\n    <div class=\\\"col-md-9\\\">\\n      <table class=\\\"table\\\" [mfData]=\\\"bookList | dataFilter : filterQuery\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"rowsOnPage\\\"\\n             [(mfSortBy)]=\\\"sortBy\\\" [(mfSortOrder)]=\\\"sortOrder\\\">\\n        <thead>\\n        <tr>\\n          <th colspan=\\\"5\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-9\\\">\\n                Filter by Description:\\n                <input class=\\\"form-control\\\" [(ngModel)]=\\\"filterQuery\\\"/>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <label class=\\\"label-control\\\">Rows on page</label>\\n                <select class=\\\"form-control input-sm\\\" [(ngModel)]=\\\"rowsOnPage\\\">\\n                  <option [ngValue]=\\\"5\\\">5</option>\\n                  <option [ngValue]=\\\"10\\\">10</option>\\n                  <option [ngValue]=\\\"15\\\">15</option>\\n                </select>\\n              </div>\\n            </div>\\n          </th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let book of mf.data\\\">\\n          <div class=\\\"row\\\" style=\\\"margin-bottom: 30px;\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <a (click)=\\\"onSelect(book)\\\" style=\\\"cursor:pointer;\\\">\\n                <img class=\\\"img-responsive\\\" src=\\\"{{serverPath}}/image/book/{{book.id}}.png\\\"/>\\n              </a>\\n            </div>\\n            <div class=\\\"col-md-9\\\">\\n              <h4 (click)=\\\"onSelect(book)\\\" style=\\\"margin-top:20px; cursor:pointer;\\\">{{book.title}}\\n              </h4>\\n              <span>{{book.publicationDate}}</span>\\n              <p>{{book.author}}</p>\\n              <a (click)=\\\"onSelect(book)\\\" style=\\\"cursor:pointer;\\\"><span>{{book.format | uppercase}}</span></a>\\n              <span>{{book.numberOfPages}}</span><span> pages</span>\\n              <br/>\\n              <a (click)=\\\"onSelect(book)\\\"><span style=\\\"font-size: x-large; color:#db3208\\\">$<span>{{book.ourPrice | number : '1.2-2'}}</span></span></a>\\n              <span style=\\\"text-decoration:line-through;\\\">$<span>{{book.listPrice | number : '1.2-2'}}</span></span>\\n              <p>{{book.description | slice:0:500}}</p>\\n            </div>\\n          </div>\\n        </tr>\\n        </tbody>\\n        <tfoot>\\n        <tr>\\n          <td colspan=\\\"5\\\">\\n            <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,15]\\\"></mfBootstrapPaginator>\\n          </td>\\n        </tr>\\n        </tfoot>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-list/book-list.component.html\n// module id = ../../../../../src/app/components/book-list/book-list.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\nimport {Book} from '../../models/book';\nimport {BookService} from '../../services/book.service';\nimport {Params, ActivatedRoute, Router} from '@angular/router';\nimport {Http} from '@angular/http';\nimport {AppConst} from '../../constants/app-const';\n\n@Component({\n    selector: 'app-book-list',\n    templateUrl: './book-list.component.html',\n    styleUrls: ['./book-list.component.css']\n})\nexport class BookListComponent implements OnInit {\n\n    filterQuery = '';\n    rowsOnPage = 5;\n    sortOrder;\n    sortBy;\n    selectedBook: Book;\n    bookList: Book[];\n    serverPath = AppConst.serverPath;\n\n    constructor(\n        private bookService: BookService,\n        private router: Router,\n        private http: Http,\n        private route: ActivatedRoute\n    ) {\n    }\n\n    onSelect(book: Book) {\n        this.selectedBook = book;\n        this.router.navigate(['/bookDetail', this.selectedBook.id]);\n    }\n\n    ngOnInit() {\n        this.route.queryParams.subscribe(params => {\n            if (params['bookList']) {\n                console.log('filtered book list');\n                this.bookList = JSON.parse(params['bookList']);\n            } else {\n                this.bookService.getBookList().subscribe(\n                    res => {\n                        console.log(res.json());\n                        this.bookList = res.json();\n                    },\n                    err => {\n                        console.log(err);\n                    }\n                );\n            }\n        });\n\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-list/book-list.component.ts","import * as _ from 'lodash';\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dataFilter'\r\n})\r\nexport class DataFilterPipe implements PipeTransform {\r\n  transform(array: any[], query: string): any {\r\n    if (query) {\r\n      return _.filter(array, row => row.description.indexOf(query) > -1);\r\n    }\r\n    return array;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/book-list/data-filter.pipe.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h3 \\n{\\n\\ttext-align:center;\\n}\\n.flex-row {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n\\t\\t<p style=\\\"text-align:center;\\\">\\n\\t\\t\\t<img src=\\\"../../../assets/image/logo.png\\\" height=370>\\n\\t\\t</p>\\n\\n    </div>\\n    \\n    <hr class=\\\"style18\\\">\\n\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-xs-4\\\">\\n\\t\\t\\t<div class=\\\"panel panel-default\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"pointer\\\" routerLink=\\\"/bookList\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"../../../assets/image/bestseller.png\\\" class=\\\"img-responsive\\\" />\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-xs-4\\\">\\n\\t\\t\\t<div class=\\\"panel panel-default\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"pointer\\\" routerLink=\\\"/hours\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"../../../assets/image/hours.png\\\" class=\\\"img-responsive\\\" />\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-xs-4\\\">\\n\\t\\t\\t<div class=\\\"panel panel-default\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\n\\t\\t\\t\\t\\t<a class=\\\"pointer\\\" routerLink=\\\"/faq\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"../../../assets/image/faq.png\\\" class=\\\"img-responsive\\\" />\\n\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div>\\n\\t\\t<h3 style=\\\"font-family:helvetica;\\\"><span>~ Featured Books ~</span></h3>\\n\\t\\t<hr style=\\\"margin-top: 15px;\\\" />\\n\\t</div>\\n\\n\\t<img class=\\\"img-responsive\\\" src=\\\"../../../assets/image/shelf.png\\\" style=\\\"margin-top: -5px; z-index:-1;\\\" />\\n\\n\\t<div class=\\\"row\\\" style=\\\"margin:auto; margin-top:-190px; margin-bottom:50px; width:90%;\\\">\\n\\t\\t<div class=\\\"col-xs-2\\\">\\n\\t\\t\\t<img class=\\\"img-responsive\\\" style=\\\"width: 71.5%;\\\" src=\\\"../../../assets/image/1.png\\\" />\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-xs-2\\\">\\n\\t\\t\\t<img class=\\\"img-responsive\\\" style=\\\"width: 71%;\\\" src=\\\"../../../assets/image/2.png\\\" />\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-xs-2\\\">\\n\\t\\t\\t<img class=\\\"img-responsive\\\" style=\\\"width: 74%;\\\" src=\\\"../../../assets/image/3.png\\\" />\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-xs-2\\\">\\n\\t\\t\\t<img class=\\\"img-responsive\\\" style=\\\"width: 70%;\\\" src=\\\"../../../assets/image/4.png\\\" />\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-xs-2\\\">\\n\\t\\t\\t<img class=\\\"img-responsive\\\" style=\\\"width: 70%;\\\" src=\\\"../../../assets/image/5.png\\\" />\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-xs-2\\\">\\n\\t\\t\\t<img class=\\\"img-responsive\\\" style=\\\"width: 69%;\\\" src=\\\"../../../assets/image/6.png\\\" />\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/my-account/my-account.component.css\n// module id = ../../../../../src/app/components/my-account/my-account.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n\\t\\t<p style=\\\"text-align:center;\\\">\\n\\t\\t\\t<img src=\\\"../../../assets/image/logo.png\\\" height=250>\\n\\t\\t</p>\\n\\t\\t<div class=\\\"col-xs-8\\\">\\n\\t\\t\\t<h2 style=\\\"font-family:helvetica;\\\"><span>Login/Register</span></h2>\\n\\t\\t</div>\\n\\n    </div>\\n    \\n    <hr class=\\\"style18\\\">\\n\\n\\t<div class=\\\"row\\\" style=\\\"margint-top:30px;\\\">\\n\\t\\t<div class=\\\"col-xs-3\\\"></div>\\n\\t\\t<div class=\\\"col-xs-9\\\">\\n\\t\\t\\t<div class=\\\"panel-group\\\">\\n\\t\\t\\t\\t<div class=\\\"panel panel-default panel-faq\\\" style=\\\"border:none;\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"panel-body\\\" style=\\\"background-color: #ededed; margin-top:20px;\\\">\\n\\t\\t\\t\\t\\t\\t<md-tab-group>\\n\\t\\t\\t\\t\\t\\t\\t<md-tab label=\\\"Login\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"margin-top:20px;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"loginError\\\" style=\\\"color:red;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tIncorrect username or password.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form (ngSubmit)=\\\"onLogin()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for =\\\"username\\\">Username *</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"credential.username\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:#828282;\\\">Enter your username</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for =\\\"password\\\">Password *</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"credential.password\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:#828282;\\\">Enter your password</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button md-raised-button type=\\\"submit\\\" class=\\\"mat-primary\\\">Log In</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</md-tab>\\n\\t\\t\\t\\t\\t\\t\\t<md-tab label=\\\"New Account\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"margin-top: 20px;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"alert alert-info\\\" *ngIf=\\\"emailSent\\\">An email has been sent to the email address you just registered. Please validate your email adderss and update your password info.</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form (ngSubmit)=\\\"onNewAccount()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"newUsername\\\">Username *</label>&nbsp;<span *ngIf=\\\"usernameExists\\\" style=\\\"color:red;\\\">Username already exists. Choose a different one.</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newUsername\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" required=\\\"required\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:#828282;\\\">Enter desired username</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"email\\\">Email Address *</label>&nbsp;<span *ngIf=\\\"emailExists\\\" style=\\\"color:red;\\\">Email already exists. Choose a different one.</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" required=\\\"required\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:#828282;\\\">Please enter a valid e-mail address. All e-mails from the system will be sent to this address.</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button md-raised-button type=\\\"submit\\\" class=\\\"mat-primary\\\">Create new account</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</md-tab>\\n\\t\\t\\t\\t\\t\\t\\t<md-tab label=\\\"Forgot Password?\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"margin-top: 20px;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"alert alert-warning\\\" *ngIf=\\\"emailNotExists\\\">Email doesn't exist.</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"alert alert-success\\\" *ngIf=\\\"forgetPasswordEmailSent\\\">Email sent.</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form (ngSubmit)=\\\"onForgetPassword()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"recoverEmail\\\">Your Email Address *</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"recoverEmail\\\" name=\\\"recoverEmail\\\" [(ngModel)]=\\\"recoverEmail\\\" required=\\\"required\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:#828282;\\\">Enter your registered email address.</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button md-raised-button type=\\\"submit\\\" class=\\\"mat-primary\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</md-tab>\\n\\t\\t\\t\\t\\t\\t</md-tab-group>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/my-account/my-account.component.html\n// module id = ../../../../../src/app/components/my-account/my-account.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {LoginService} from '../../services/login.service';\nimport {UserService} from '../../services/user.service';\nimport {AppConst} from '../../constants/app-const';\n\n@Component({\n  selector: 'app-my-account',\n  templateUrl: './my-account.component.html',\n  styleUrls: ['./my-account.component.css']\n})\nexport class MyAccountComponent implements OnInit {\n\n   serverPath = AppConst.serverPath;\n   loginError = false;\n   loggedIn = false;\n   credential = {'username': '', 'password': ''};\n\n   emailSent = false;\n   usernameExists: boolean;\n   emailExists: boolean;\n   username: string;\n   email: string;\n\n   emailNotExists = false;\n   forgetPasswordEmailSent: boolean;\n   recoverEmail: string;\n\n  constructor(\n    private loginService: LoginService,\n    private userService: UserService,\n    private router: Router\n  ) {\n  }\n\n  onLogin() {\n    this.loginService.sendCredential(this.credential.username, this.credential.password).subscribe(\n      res => {\n        console.log(res);\n        localStorage.setItem('xAuthToken', res.json().token);\n        this.loggedIn = true;\n        location.reload();\n        this.router.navigate(['/home']);\n      },\n      error => {\n        this.loggedIn = false;\n        this.loginError = true;\n      }\n    );\n  }\n\n  onNewAccount() {\n    this.usernameExists = false;\n    this.emailExists = false;\n    this.emailSent = false;\n\n    this.userService.newUser(this.username, this.email).subscribe(\n      res => {\n        console.log(res);\n        this.emailSent = true;\n      },\n      error => {\n        console.log(error.text());\n        const errorMessage = error.text();\n        if (errorMessage === 'usernameExists') {\n          this.usernameExists = true;\n        }\n        if (errorMessage === 'emailExists') {\n          this.emailExists = true;\n        }\n      }\n    );\n  }\n\n  onForgetPassword() {\n    this.forgetPasswordEmailSent = false;\n    this.emailNotExists = false;\n\n    this.userService.retrievePassword(this.recoverEmail).subscribe(\n      res => {\n        console.log(res);\n        this.forgetPasswordEmailSent = true;\n      },\n      error => {\n        console.log(error.text());\n        const errorMessage = error.text();\n        if (errorMessage === 'Email not found') {\n          this.emailNotExists = true;\n        }\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.loginService.checkSession().subscribe(\n      res => {\n        this.loggedIn = true;\n      },\n      error => {\n        this.loggedIn = false;\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/my-account/my-account.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/my-profile/my-profile.component.css\n// module id = ../../../../../src/app/components/my-profile/my-profile.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n\\t\\t<p style=\\\"text-align:center;\\\">\\n\\t\\t\\t<img src=\\\"../../../assets/image/logo.png\\\" height=250>\\n\\t\\t</p>\\n\\t\\t<div class=\\\"col-xs-8\\\">\\n\\t\\t\\t<h2 style=\\\"font-family:helvetica;\\\"><span>Account Details</span></h2>\\n\\t\\t</div>\\n    </div>\\n    \\n    <hr class=\\\"style18\\\">\\n\\t<div *ngIf=\\\"!dataFetched\\\" style=\\\"margin-top: 50px;\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-2 col-md-offset-5\\\">\\n\\t\\t\\t\\t<md-spinner></md-spinner>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row\\\" style=\\\"margin-top:30px;\\\">\\n\\t\\t<div class=\\\"col-xs-3\\\"></div>\\n\\t\\t<div *ngIf=\\\"dataFetched\\\">\\n\\t\\t\\t<div class=\\\"col-xs-9\\\">\\n\\t\\t\\t\\t<div class=\\\"panel-group\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"panel panel-default\\\" style=\\\"border:none;\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"panel-body\\\" style=\\\"background-color: #ededed; margin-top: 20px;\\\">\\n\\t\\t\\t\\t\\t\\t\\t<md-tab-group [selectedIndex]=\\\"selectedProfileTab\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<md-tab label=\\\"Edit\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div style=\\\"margin-top: 20px;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"alert alert-danger\\\" *ngIf=\\\"incorrectPassword\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Incorrect Password!</strong> Please enter the correct password for the current user.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"alert alert-success\\\" *ngIf=\\\"updateSuccess\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Update Success!</strong>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<form (ngSubmit)=\\\"onUpdateUserInfo()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"user.id\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"bg-info\\\" *ngIf=\\\"updateUserInfo\\\">User info updated.</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"firstName\\\">First Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"user.firstName\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"lastName\\\">Last Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"user.lastName\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"username\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tUsername *\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;<span *ngIf=\\\"usernameExists\\\" style=\\\"color:red\\\">Username already exists. Choose a different one.</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input required=\\\"required\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"currentPassword\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tCurrent Password\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"currentPassword\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:#828282;\\\">Enter your current password to change the E-mail address or Password.</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"email\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tEmail Address *\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;<span *ngIf=\\\"emailExists\\\" style=\\\"color:red\\\">Email already exists. Choose a different one.</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input required=\\\"required\\\" type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:#828282;\\\">A valid e-mail address. All e-mails from the system will be sent to this address.</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"txtNewPassword\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tNew Password *\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>&nbsp;<span id=\\\"checkPasswordMatch\\\" style=\\\"color:red;\\\"></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"txtNewPassword\\\" name=\\\"txtNewPassword\\\" [(ngModel)]=\\\"newPassword\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"txtConfirmPassword\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tConfirm New Password *\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"txtConfirmPassword\\\" name=\\\"txtNewPassword\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button md-raised-button type=\\\"submit\\\" class=\\\"mat-primary\\\" id=\\\"udpateuserInfoButton\\\">Save</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\t</md-tab>\\n\\t\\t\\t\\t\\t\\t\\t\\t<md-tab label=\\\"Orders\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel panel-default panel-faq\\\" style=\\\"border: none;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-body\\\" style=\\\"background-color: #ededed; margin-top: 20px;\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table table-sm table-inverse\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Order Date</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Order Number</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Total</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Status</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let order of orderList\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"pointer\\\" (click)=\\\"onDisplayOrder(order)\\\"><span\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t>{{order.orderDate}}</span></a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{order.id}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{order.orderTotal}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{order.orderStatus}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"displayOrderDetail\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h2>Order Detail for Purchase #<span>{{order.id}}</span></h2>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<hr/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel panel-default height\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-heading\\\"><strong>Billing Details</strong>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{order.billingAddress.billingAddressName}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{order.billingAddress.billingAddressStreet1}} {{order.billingAddress.billingAddressStreet2}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{order.billingAddress.billingAddressCity}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{order.billingAddress.billingAddressState}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{order.billingAddress.billingAddressZipcode}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel panel-default height\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-heading\\\"><strong>Payment Information</strong>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{order.payment.holderName}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/> Visa\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{order.payment.cardNumber}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Exp Date:</span> <span>{{order.payment.expiryMonth}}</span>/<span>{{order.payment.expiryYear}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel panel-default height\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-heading\\\"><strong>Shipping Address</strong>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{order.shippingAddress.shippingAddressName}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{order.shippingAddress.shippingAddressStreet1}}' '{{order.shippingAddress.shippingAddressStreet2}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{order.shippingAddress.shippingAddressCity}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{order.shippingAddress.shippingAddressState}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{order.shippingAddress.shippingAddressZipcode}}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel panel-default\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-heading\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h3 class=\\\"text-center\\\"><strong>Order summary</strong></h3>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"panel-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table table-condensed\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><strong>Item Name</strong></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><strong>Item Price</strong></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><strong>Item Quantity</strong>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-right\\\"><strong>Total</strong></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let cartItem of cartItemList\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{cartItem.book.title}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{cartItem.book.ourPrice}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{cartItem.qty}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-right\\\">{{cartItem.subtotal}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"highrow\\\"></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"highrow\\\"></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"highrow text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<strong>Subtotal</strong></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"highrow text-right\\\">{{order.orderTotal}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"emptyrow\\\"></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"emptyrow\\\"></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"emptyrow text-center\\\"><strong>Tax</strong>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"emptyrow text-right\\\">{{order.orderTotal*0.06}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"emptyrow\\\"><i class=\\\"fa fa-barcode iconbig\\\"></i></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"emptyrow\\\"></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"emptyrow text-center\\\"><strong>Total</strong>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"emptyrow text-right\\\">{{order.orderTotal*1.06}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-tab>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-tab label=\\\"Payment\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"defaultPaymentSet\\\">Default payment set successfully!</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-tab-group (selectedIndexChange)=\\\"selectedBillingChange($event)\\\" [selectedIndex]=\\\"selectedBillingTab\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-tab label=\\\"List of Credit Cards\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<form (ngSubmit)=\\\"setDefaultPayment()\\\" method=\\\"post\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Default</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Credit Card</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Operations</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let userPayment of userPaymentList\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"radio\\\" name=\\\"defaultUserPaymentId\\\" [(ngModel)]=\\\"defaultUserPaymentId\\\" [value]=\\\"userPayment.id\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Default</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{userPayment.cardName}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a md-button (click)=\\\"onUpdatePayment(userPayment)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a md-button (click)=\\\"onRemovePayment(userPayment.id)\\\"><i class=\\\"fa fa-times\\\"></i></a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button md-raised-button class=\\\"mat-primary\\\" type=\\\"submit\\\">Save</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-tab>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-tab label=\\\"Add(Update) Credit Card\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<form (ngSubmit)=\\\"onNewPayment()\\\" method=\\\"post\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"bg-info\\\" *ngIf=\\\"updateUserPaymentInfo\\\">User info updated.</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input hidden=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"userPayment.id\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h5>* Give a name for your card:</h5>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cardName\\\" placeholder=\\\"Card Name\\\" name=\\\"cardName\\\" required=\\\"required\\\" [(ngModel)]=\\\"userPayment.cardName\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- Billing Address -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<hr />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"billingName\\\">* Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"billingName\\\" placeholder=\\\"Receiver name\\\" name=\\\"userBillingName\\\" required=\\\"required\\\" [(ngModel)]=\\\"userBilling.userBillingName\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"billingAddress\\\">* Street Address</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"billAddress\\\" placeholder=\\\"Street Address 1\\\" name=\\\"userBillingStreet1\\\" required=\\\"required\\\" [(ngModel)]=\\\"userBilling.userBillingStreet1\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Street Address 2\\\" name=\\\"userBillingStreet2\\\" [(ngModel)]=\\\"userBilling.userBillingStreet2\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"billingCity\\\">* City</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userBillingCity\\\" placeholder=\\\"Your Billing City\\\" name=\\\"userBillingCity\\\" required=\\\"required\\\" [(ngModel)]=\\\"userBilling.userBillingCity\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"billingState\\\">* State</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"billingState\\\" class=\\\"form-control\\\" name=\\\"userBillingstate\\\" [(ngModel)]=\\\"userBilling.userBillingState\\\" required=\\\"required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled>-- state --</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of stateList\\\">{{state}}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"billingZipcode\\\">* Zipcode</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userBillingZipcode\\\" placeholder=\\\"Zipcode\\\" name=\\\"userBillingZipcode\\\" required=\\\"required\\\" [(ngModel)]=\\\"userBilling.userBillingZipcode\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- User Payment -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<hr />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4>Credit Card Information</h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"../../../assets/image/creditcard.png\\\" class=\\\"img-responsive\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"cardType\\\">* Select Card Type</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"cardType\\\" class=\\\"form-control\\\" name=\\\"cardType\\\" [(ngModel)]=\\\"userPayment.type\\\" required=\\\"required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled>-- Card Type --</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"visa\\\">Visa</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"mastercard\\\">Mastercard</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"discover\\\">Discover</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"amex\\\">American Express</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"cardHolder\\\">* Card Holder</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cardholder\\\" placeholder=\\\"Card Holder Name\\\" name=\\\"cardHolderName\\\" required=\\\"required\\\" [(ngModel)]=\\\"userPayment.holderName\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"cardNumber\\\">* Card Number</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input required=\\\"required\\\" id=\\\"cardNumber\\\" type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"cardNumber\\\" placeholder=\\\"Valid Card Number\\\" [(ngModel)]=\\\"userPayment.cardNumber\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-credit-card\\\"></i></span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-7\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>* Expiration Date</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" name=\\\"expiryMonth\\\" required=\\\"required\\\" [(ngModel)]=\\\"userPayment.expiryMonth\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled=\\\"disabled\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t-- Month --\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">Jan (01)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">Feb (02)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">Mar (03)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">Apr (04)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">May (05)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">Jun (06)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"7\\\">July (07)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"8\\\">Aug (08)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"9\\\">Sep (09)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">Oct (10)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"11\\\">Nov (11)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"12\\\">Dec (12)</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control\\\" name=\\\"expiryYear\\\" required=\\\"required\\\" [(ngModel)]=\\\"userPayment.expiryYear\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled=\\\"disabled\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t-- Year --\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"17\\\">2017</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"18\\\">2018</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"19\\\">2019</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"20\\\">2020</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"21\\\">2021</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"22\\\">2022</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"23\\\">2023</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"24\\\">2024</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"25\\\">2025</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-5 pull-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"cardCVC\\\">CV Code</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"cardCVC\\\" type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"cardCVC\\\" placeholder=\\\"CVC\\\" [(ngModel)]=\\\"userPayment.cvc\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<hr />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button md-raised-button type=\\\"submit\\\" class=\\\"mat-primary\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tSave All\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-tab>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-tab-group>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-tab>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-tab label=\\\"Shipping\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"defaultShippingSet\\\">Default shipping set successfully!</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-tab-group (selectedIndexChange)=\\\"selectedShippingChange($event)\\\" [selectedIndex]=\\\"selectedShippingTab\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-tab label=\\\"List of Shipping Addresses\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<form (ngSubmit)=\\\"setDefaultShipping()\\\" method=\\\"post\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Default</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Shipping Address</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Operations</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let userShipping of userShippingList\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"radio\\\" name=\\\"defaultUserShippingId\\\" [(ngModel)]=\\\"defaultUserShippingId\\\" [value]=\\\"userShipping.id\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Default</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{userShipping.userShippingStreet1}}, {{userShipping.userShippingStreetCity}}, {{userShipping.userShippingState}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a md-button (click)=\\\"onUpdateShipping(userShipping)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a md-button (click)=\\\"onRemoveShipping(userShipping.id)\\\"><i class=\\\"fa fa-times\\\"></i></a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button md-raised-button class=\\\"mat-primary\\\" type=\\\"submit\\\">Save</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-tab>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<md-tab label=\\\"Add(Update) Shipping Address\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<form (ngSubmit)=\\\"onNewShipping()\\\" method=\\\"post\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"bg-info\\\" *ngIf=\\\"updateUserShippingInfo\\\">User info updated.</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input hidden=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"userShipping.id\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"shippingname\\\">* Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"shippingName\\\" placeholder=\\\"Receiver Name\\\" name=\\\"userShippingName\\\" required=\\\"required\\\" [(ngModel)]=\\\"userShipping.userShippingName\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"shippingAddress\\\">* Street Address</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"shippingAddress\\\" placeholder=\\\"Street Address 1\\\" name=\\\"userShippingStreet1\\\" required=\\\"required\\\" [(ngModel)]=\\\"userShipping.userShippingStreet1\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Street Address 2\\\" name=\\\"userShippingStreet2\\\" [(ngModel)]=\\\"userShipping.userShippingStreet2\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"shippingCity\\\">* City</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"shippingCity\\\" placeholder=\\\"Your Shipping City\\\" name=\\\"userShippingCity\\\" required=\\\"required\\\" [(ngModel)]=\\\"userShipping.userShippingCity\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"shippingState\\\">* State</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<select id=\\\"shippingState\\\" class=\\\"form-control\\\" name=\\\"userShippingState\\\" [(ngModel)]=\\\"userShipping.userShippingState\\\" required=\\\"required\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"\\\" disabled>-- state --</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let state of stateList\\\">{{state}}</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"shippingZipcode\\\">* Zipcode</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userShippingZipcode\\\" placeholder=\\\"Zipcode\\\" name=\\\"userShippingZipcode\\\" required=\\\"required\\\" [(ngModel)]=\\\"userShipping.userShippingZipcode\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<hr />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button md-raised-button type=\\\"submit\\\" class=\\\"mat-primary\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tSave All\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-tab>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-tab-group>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-tab>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</md-tab-group>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/my-profile/my-profile.component.html\n// module id = ../../../../../src/app/components/my-profile/my-profile.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\nimport {AppConst} from '../../constants/app-const';\nimport {UserService} from '../../services/user.service';\nimport {LoginService} from '../../services/login.service';\nimport {User} from '../../models/user';\nimport {Router} from '@angular/router';\nimport {PaymentService} from '../../services/payment.service';\nimport {ShippingService} from '../../services/shipping.service';\nimport {UserPayment} from '../../models/user-payment';\nimport {UserBilling} from '../../models/user-billing';\nimport {UserShipping} from '../../models/user-shipping';\nimport {Order} from '../../models/order';\nimport {OrderService} from '../../services/order.service';\n\n@Component({\n    selector: 'app-my-profile',\n    templateUrl: './my-profile.component.html',\n    styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n\n    serverPath = AppConst.serverPath;\n    dataFetched = false;\n    loginError: boolean;\n    loggedIn: boolean;\n    credential = {'username': '', 'password': ''};\n\n    user: User = new User();\n    updateSuccess: boolean;\n    newPassword: string;\n    incorrectPassword: boolean;\n    currentPassword: string;\n\n    selectedProfileTab: number = 0;\n    selectedBillingTab: number = 0;\n    selectedShippingTab: number = 0;\n\n    userPayment: UserPayment = new UserPayment();\n    userBilling: UserBilling = new UserBilling();\n    userPaymentList: UserPayment[] = [];\n    defaultPaymentSet: boolean;\n    defaultUserPaymentId: number;\n    stateList: string[] = [];\n\n    userShipping: UserShipping = new UserShipping();\n    userShippingList: UserShipping[] = [];\n\n    defaultUserShippingId: number;\n    defaultShippingSet: boolean;\n\n    orderList: Order[] = [];\n    order: Order = new Order();\n    displayOrderDetail: boolean;\n\n\n    constructor(\n        private loginService: LoginService,\n        private userService: UserService,\n        private paymentService: PaymentService,\n        private shippingService: ShippingService,\n        private orderService: OrderService,\n        private router: Router\n    ) {\n    }\n\n    selectedShippingChange(val: number) {\n        this.selectedShippingTab = val;\n    }\n\n    selectedBillingChange(val: number) {\n        this.selectedBillingTab = val;\n    }\n\n    onUpdateUserInfo() {\n        this.userService.updateUserInfo(this.user, this.newPassword, this.currentPassword).subscribe(\n            res => {\n                console.log(res.text());\n                this.updateSuccess = true;\n            },\n            error => {\n                console.log(error.text());\n                let errorMessage = error.text();\n                if (errorMessage === 'Incorrect current password!') this.incorrectPassword = true;\n            }\n        );\n    }\n\n\n    onNewPayment() {\n        this.paymentService.newPayment(this.userPayment).subscribe(\n            res => {\n                this.getCurrentUser();\n                this.selectedBillingTab = 0;\n                this.userPayment = new UserPayment();\n            },\n            error => {\n                console.log(error.text());\n            }\n        );\n    }\n\n    onUpdatePayment(payment: UserPayment) {\n        this.userPayment = payment;\n        this.userBilling = payment.userBilling;\n        this.selectedBillingTab = 1;\n    }\n\n    onRemovePayment(id: number) {\n        this.paymentService.removePayment(id).subscribe(\n            res => {\n                this.getCurrentUser();\n            },\n            error => {\n                console.log(error.text());\n            }\n        );\n    }\n\n    setDefaultPayment() {\n        this.defaultPaymentSet = false;\n        this.paymentService.setDefaultPayment(this.defaultUserPaymentId).subscribe(\n            res => {\n                this.getCurrentUser();\n                this.defaultPaymentSet = true;\n            },\n            error => {\n                console.log(error.text());\n            }\n        );\n    }\n\n    onNewShipping() {\n        this.shippingService.newShipping(this.userShipping).subscribe(\n            res => {\n                this.getCurrentUser();\n                this.selectedShippingTab = 0;\n                this.userShipping = new UserShipping();\n            },\n            error => {\n                console.log(error.text());\n            }\n        );\n    }\n\n    onUpdateShipping(shipping: UserShipping) {\n        this.userShipping = shipping;\n        this.selectedShippingTab = 1;\n    }\n\n    onRemoveShipping(id: number) {\n        this.shippingService.removeShipping(id).subscribe(\n            res => {\n                this.getCurrentUser();\n            },\n            error => {\n                console.log(error.text());\n            }\n        );\n    }\n\n    setDefaultShipping() {\n        this.defaultShippingSet = false;\n        this.shippingService.setDefaultShipping(this.defaultUserShippingId).subscribe(\n            res => {\n                this.getCurrentUser();\n                this.defaultShippingSet = true;\n            },\n            error => {\n                console.log(error.text());\n            }\n        );\n    }\n\n    getCurrentUser() {\n        this.userService.getCurrentUser().subscribe(\n            res => {\n                this.user = res.json();\n                this.userPaymentList = this.user.userPaymentList;\n                this.userShippingList = this.user.userShippingList;\n\n                for (let index in this.userPaymentList) {\n                    if (this.userPaymentList[index].defaultPayment) {\n                        this.defaultUserPaymentId = this.userPaymentList[index].id;\n                        break;\n                    }\n                }\n\n                for (let index in this.userShippingList) {\n                    if (this.userShippingList[index].userShippingDefault) {\n                        this.defaultUserShippingId = this.userShippingList[index].id;\n                        break;\n                    }\n                }\n\n                this.dataFetched = true;\n            },\n            err => {\n                console.log(err);\n            }\n        );\n    }\n\n    onDisplayOrder(order: Order) {\n        console.log(order);\n        this.order = order;\n        this.displayOrderDetail = true;\n    }\n\n\n    ngOnInit() {\n        this.loginService.checkSession().subscribe(\n            res => {\n                this.loggedIn = true;\n            },\n            error => {\n                this.loggedIn = false;\n                console.log('inactive session');\n                this.router.navigate(['/myAccount']);\n            }\n        );\n\n        this.getCurrentUser();\n\n        this.orderService.getOrderList().subscribe(\n            res => {\n                this.orderList = res.json();\n            },\n            error => {\n                console.log(error.text());\n            }\n        );\n\n        for (let s in AppConst.usStates) {\n            this.stateList.push(s);\n        }\n\n        this.userBilling.userBillingState = '';\n        this.userPayment.type = '';\n        this.userPayment.expiryMonth = '';\n        this.userPayment.expiryYear = '';\n        this.userPayment.userBilling = this.userBilling;\n        this.defaultPaymentSet = false;\n\n        this.userShipping.userShippingState = '';\n        this.defaultShippingSet = false;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/my-profile/my-profile.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#searchField\\n{\\n    width: 100%;\\n}\\n\\n#searchDiv\\n{\\n    width: 200%;\\n\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/nav-bar/nav-bar.component.css\n// module id = ../../../../../src/app/components/nav-bar/nav-bar.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"page-top\\\" style=\\\"width: 100%; height: 20px; background-color: #e6005c\\\"></div>\\n\\n<nav class=\\\"navbar navbar-default navbar-inverse\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand pointer\\\" routerLink=\\\"/home\\\">Home</a>\\n    </div>\\n\\n    <div id=\\\"navbar\\\">\\n      <ul class=\\\"nav navbar-nav navbar-left\\\">\\n        <li><a md-button routerLink=\\\"/bookList\\\">Browse Books from DB</a></li>\\n        <form class=\\\"navbar-form\\\">\\n          <div class=\\\"form-group\\\">\\n            <input\\n                    type=\\\"text\\\"\\n                   name=\\\"searchByTitle\\\"\\n                   [(ngModel)]=\\\"keyword\\\" class=\\\"form-control\\\"\\n                   placeholder=\\\"Search books from API\\\"/>\\n          </div>\\n          <button type=\\\"submit\\\"\\n                  class=\\\"btn btn-primary\\\"\\n                  (click)=\\\"search(keyword)\\\">Search\\n          </button>\\n        </form>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li *ngIf=\\\"!loggedIn\\\">\\n          <a md-button routerLink=\\\"/myAccount\\\">Login/Register</a>\\n        </li>\\n        <li *ngIf=\\\"loggedIn\\\">\\n          <a md-button routerLink=\\\"/shoppingCart\\\">Shopping Cart</a>\\n        </li>\\n        <li *ngIf=\\\"loggedIn\\\">\\n          <a md-button routerLink=\\\"/myProfile\\\">My Profile</a>\\n        </li>\\n        <li *ngIf=\\\"loggedIn\\\">\\n          <a md-button (click)=\\\"logout()\\\">Logout</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/nav-bar/nav-bar.component.html\n// module id = ../../../../../src/app/components/nav-bar/nav-bar.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\nimport {LoginService} from '../../services/login.service';\nimport {Router, ActivatedRoute, NavigationExtras} from '@angular/router';\nimport {BookService} from '../../services/book.service';\nimport {Book} from '../../models/book';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n   loggedIn = false;\n   keyword: string;\n   bookList: Book[] = [];\n  results = [];\n\n  constructor(\n    private loginService: LoginService,\n    private router: Router,\n    private bookService: BookService,\n    private route: ActivatedRoute\n  ) {\n  }\n\n  logout() {\n    this.loginService.logout().subscribe(\n      res => {\n        location.reload();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  search(keyword) {\n    this.router.navigate(['search/' + keyword]);\n  }\n\n  onSearchByTitle() {\n    this.bookService.searchBook(this.keyword).subscribe(\n      res => {\n        this.bookList = res.json();\n        console.log(this.bookList);\n        const navigationExtras: NavigationExtras = {\n          queryParams: {\n            'bookList': JSON.stringify(this.bookList)\n          }\n        };\n\n        this.router.navigate(['/bookList'], navigationExtras);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.loginService.checkSession().subscribe(\n      res => {\n        this.loggedIn = true;\n      },\n      err => {\n        this.loggedIn = false;\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/nav-bar/nav-bar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/order-summary/order-summary.component.css\n// module id = ../../../../../src/app/components/order-summary/order-summary.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <p style=\\\"text-align:center;\\\">\\n            <img src=\\\"../../../assets/image/logo.png\\\" height=250>\\n        </p>\\n        <div class=\\\"col-xs-8\\\">\\n            <h2 style=\\\"font-family:helvetica;\\\"><span>Order Summary</span></h2>\\n        </div>\\n\\n    </div>\\n    \\n    <hr class=\\\"style18\\\">\\n\\n    <div class=\\\"row\\\" style=\\\"margin-top: 120px;\\\">\\n        <div class=\\\"alert alert-success\\\">\\n            <h3><i class=\\\"fa fa-check\\\" style=\\\"color:limegreen;\\\"></i> Thank you, your order has been placed. </h3>\\n            <h4>The estimated delivery date is <span>{{estimatedDeliveryDate}}</span></h4>\\n        </div>\\n        <h3>List of Items</h3>\\n        <div class=\\\"row\\\" *ngFor=\\\"let cartItem of cartItemList\\\">\\n            <hr/>\\n            <div class=\\\"col-xs-2\\\">\\n                <a md-button (click)=\\\"onSelect(cartItem.book)\\\"><img class=\\\"img-responsive\\\" src=\\\"{{serverPath}}/image/book/{{cartItem.book.id}}.png\\\" style=\\\"width:70px;\\\" /></a>\\n            </div>\\n            <div class=\\\"col-xs-6\\\">\\n                <a class=\\\"pointer\\\" (click)=\\\"onSelect(cartItem.book)\\\">\\n                    <h4>{{cartItem.book.title}}</h4></a>\\n                <p *ngIf=\\\"cartItem.book.inStockNumber > 10\\\" style=\\\"color:green;\\\">In Stock</p>\\n                <p *ngIf=\\\"cartItem.book.inStockNumber < 10 && cartItem.book.inStockNumber > 0\\\" style=\\\"color:green;\\\">Only <span>{{cartItem.book.inStockNumber}}</span> In Stock</p>\\n                <p *ngIf=\\\"cartItem.book.inStockNumber == 0\\\" style=\\\"color:darkred;\\\">Product Unavailable</p>\\n                <a class=\\\"pointer\\\" (click)=\\\"onRemoveCartItem(cartItem)\\\">delete</a>\\n            </div>\\n            <div class=\\\"col-xs-2\\\">\\n                <h5 style=\\\"color:#db3208; font-size:large;\\\">$<span [ngClass]=\\\"{'text-strike': cartItem.book.inStockNumber == 0}\\\">{{cartItem.book.ourPrice}}</span>\\n            \\t\\t\\t</h5>\\n            </div>\\n            <div class=\\\"col-xs-2 text-center\\\">\\n                <h5 style=\\\"font-size: large\\\">{{cartItem.qty}}</h5>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/order-summary/order-summary.component.html\n// module id = ../../../../../src/app/components/order-summary/order-summary.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\nimport {AppConst} from '../../constants/app-const';\nimport {Params, ActivatedRoute, Router} from '@angular/router';\nimport {CheckoutService} from '../../services/checkout.service';\nimport {Order} from '../../models/order';\nimport {CartItem} from '../../models/cart-item';\n\n\n@Component({\n    selector: 'app-order-summary',\n    templateUrl: './order-summary.component.html',\n    styleUrls: ['./order-summary.component.css']\n})\nexport class OrderSummaryComponent implements OnInit {\n    serverPath = AppConst.serverPath;\n    order: Order = new Order();\n    estimatedDeliveryDate: string;\n    cartItemList: CartItem[] = [];\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) {\n    }\n\n    ngOnInit() {\n        this.route.queryParams.subscribe(params => {\n            this.order = JSON.parse(params['order']);\n\n            let deliveryDate = new Date();\n\n            if (this.order.shippingMethod == 'groundShipping') {\n                deliveryDate.setDate(deliveryDate.getDate() + 5);\n            } else {\n                deliveryDate.setDate(deliveryDate.getDate() + 3);\n            }\n\n            let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n            this.estimatedDeliveryDate = days[deliveryDate.getDay()] + ', ' + deliveryDate.getFullYear() + '/' + deliveryDate.getMonth() + '/' + deliveryDate.getDate();\n\n\n            this.cartItemList = this.order.cartItemList;\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/order-summary/order-summary.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/order/order.component.css\n// module id = ../../../../../src/app/components/order/order.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <p style=\\\"text-align:center;\\\">\\n            <img src=\\\"../../../assets/image/logo.png\\\" height=250>\\n        </p>\\n        <div class=\\\"col-xs-8\\\">\\n            <h2 style=\\\"font-family:helvetica;\\\"><span>Checkout</span></h2>\\n        </div>\\n\\n    </div>\\n    \\n    <hr class=\\\"style18\\\">\\n    \\n    <div class=\\\"row\\\" style=\\\"margin-top: 120px;\\\">\\n        <form (ngSubmit)=\\\"onSubmit()\\\" method=\\\"post\\\">\\n            <div class=\\\"col-xs-4\\\">\\n                <div class=\\\"panel panel-default\\\">\\n                    <div class=\\\"panel-body\\\">\\n                        <button md-raised-button type=\\\"submit \\\" class=\\\"btn-block mat-primary\\\">Place your order\\n                        </button>\\n                        <p style=\\\"font-size: smaller\\\">By placing your order, you agree to Ficstore <a href=\\\"#\\\">privacy</a> notice and\\n                            <a href=\\\"#\\\">conditions</a> of use.</p>\\n                            <hr/>\\n                            <h3>Order Summary</h3>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-xs-7 text-left\\\">\\n                                    Total before tax:\\n                                </div>\\n                                <div class=\\\"col-xs-5 text-right\\\">\\n                                    $\\n                                    <span>{{shoppingCart.grandTotal}}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row \\\">\\n                                <div class=\\\"col-xs-7 text-left \\\">\\n                                    Estimated tax:\\n                                </div>\\n                                <div class=\\\"col-xs-5 text-right \\\">\\n                                    $<span>{{shoppingCart.grandTotal*0.06 | number : '1.2-2'}}</span>\\n                                </div>\\n                            </div>\\n                            <hr />\\n                            <div class=\\\"row \\\">\\n                                <div class=\\\"col-xs-7 text-left \\\">\\n                                    <h3 style=\\\"color:darkred; \\\"><strong>Order total:</strong></h3>\\n                                </div>\\n                                <div class=\\\"col-xs-5 text-right \\\">\\n                                    <h3><strong style=\\\"color:darkred; \\\">$<span\\n                                        >{{shoppingCart.grandTotal*1.06 | number : '1.2-2'}}</span>\\n                                    </strong></h3>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"panel-footer \\\">Shipping and handling haven't applied.</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-xs-8 \\\">\\n                    <div *ngIf=\\\"missingRequiredField\\\">\\n                        <h5 class=\\\"alert alert-warning \\\">There are some fields missing. Field with * is required. </h5>\\n                    </div>\\n                    <md-tab-group (selectedIndexChange)=\\\"selectedChange($event)\\\" [selectedIndex]=\\\"selectedTab\\\">\\n                        <!--1. Shipping Address-->\\n                        <md-tab label=\\\"1. Shipping Address\\\">\\n                            <div class=\\\"panel panel-default \\\">\\n                                <div class=\\\"panel-heading \\\">\\n                                    <h4 class=\\\"panel-title \\\">\\n                                        1. Shipping Address\\n                                    </h4>\\n                                </div>\\n                                <div class=\\\"panel-body \\\">\\n                                    <table class=\\\"table \\\" *ngIf=\\\"!emptyShippingList \\\">\\n                                        <thead>\\n                                            <tr>\\n                                                <th>Available Shipping Addresses</th>\\n                                                <th>Operations</th>\\n                                            </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let userShipping of userShippingList \\\">\\n                                                <td>\\n                                                    {{userShipping.userShippingStreet1}}, {{userShipping.userShippingStreet2}}, {{userShipping.userShippingCity}}, {{userShipping.userShippingState}}\\n                                                </td>\\n                                                <td>\\n                                                    <a class=\\\"pointer\\\" (click)=\\\"setShippingAddress(userShipping) \\\">Use\\n                                                    this address</a>\\n                                                </td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                                    <div class=\\\"form-group \\\">\\n                                        <label for=\\\"shippingName \\\">* Name</label>\\n                                        <input type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"shippingName \\\" placeholder=\\\"Recevier Name \\\" name=\\\"shippingAddressName \\\" [(ngModel)]=\\\"shippingAddress.shippingAddressName \\\" />\\n                                    </div>\\n                                    <div class=\\\"form-group \\\">\\n                                        <label for=\\\"shippingAddress \\\">* Street Address</label>\\n                                        <input type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"shippingAddress \\\" placeholder=\\\"Street Address 1 \\\" name=\\\"shippingAddressStreet1 \\\" [(ngModel)]=\\\"shippingAddress.shippingAddressStreet1 \\\" />\\n                                    </div>\\n                                    <div class=\\\"form-group \\\">\\n                                        <input type=\\\"text \\\" class=\\\"form-control \\\" placeholder=\\\"Street Address 2 \\\" name=\\\"shippingAddressStreet2 \\\" [(ngModel)]=\\\"shippingAddress.shippingAddressStreet2 \\\" />\\n                                    </div>\\n                                    <div class=\\\"row \\\">\\n                                        <div class=\\\"col-xs-4 \\\">\\n                                            <div class=\\\"form-group \\\">\\n                                                <label for=\\\"shippingCity \\\">* City</label>\\n                                                <input type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"shippingCity \\\" placeholder=\\\"Your City \\\" name=\\\"shippingAddressCity \\\" [(ngModel)]=\\\"shippingAddress.shippingAddressCity \\\" />\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-xs-4 \\\">\\n                                            <div class=\\\"form-group \\\">\\n                                                <label for=\\\"shippingState \\\">* State</label>\\n                                                <select id=\\\"shippingState \\\" class=\\\"form-control \\\" name=\\\"shippingAddressState \\\" [(ngModel)]=\\\"shippingAddress.shippingAddressState \\\">\\n                                                    <option value=\\\"\\\" disabled>-- state --</option>\\n                                                    <option *ngFor=\\\"let state of stateList \\\">{{state}}\\n                                                    </option>\\n                                                </select>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-xs-4 \\\">\\n                                            <div class=\\\"form-group \\\">\\n                                                <label for=\\\"shippingZipcode \\\">* Zipcode</label>\\n                                                <input type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"shippingZipcode \\\" placeholder=\\\"Zipcode \\\" name=\\\"shippingAddressZipcode \\\" [(ngModel)]=\\\"shippingAddress.shippingAddressZipcode \\\" />\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <a md-raised-button class=\\\"mat-primary\\\" (click)=\\\"goToPayment()\\\">Next</a>\\n                                </div>\\n                            </div>\\n                        </md-tab>\\n                        <!--2. Payment Information-->\\n                        <md-tab label=\\\"2. Payment Information\\\">\\n                            <div class=\\\"panel panel-default \\\">\\n                                <div class=\\\"panel-heading \\\">\\n                                    <h4 class=\\\"panel-title \\\">\\n                                        2. Payment Information\\n                                    </h4>\\n                                </div>\\n                                <div class=\\\"panel-body \\\">\\n                                    <table class=\\\"table \\\" *ngIf=\\\"!emptyPaymentList \\\">\\n                                        <thead>\\n                                            <tr>\\n                                                <th>Available Credit Card(s)</th>\\n                                                <th>Operations</th>\\n                                            </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                            <tr *ngFor=\\\"let userPayment of userPaymentList \\\">\\n                                                <td>\\n                                                    {{userPayment.cardName}}\\n                                                </td>\\n                                                <td>\\n                                                    <a class=\\\"pointer\\\" (click)=\\\"setPaymentMethod(userPayment)\\\">Use this payment method\\n                                                    </a>\\n                                                </td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                                    <!-- CREDIT CARD FORM STARTS HERE -->\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-xs-12\\\">\\n                                            <img src=\\\"../../../assets/image/creditcard.png\\\" class=\\\"img-responsive\\\" />\\n                                            <br/>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label for=\\\"cardType\\\">* Select Card Type:</label>\\n                                                <select class=\\\"form-control\\\" id=\\\"cardType\\\" name=\\\"type\\\" [(ngModel)]=\\\"payment.type\\\">\\n                                                    <option value=\\\"\\\" disabled=\\\"disabled\\\">\\n                                                        -- Card Type --\\n                                                    </option>\\n                                                    <option value=\\\"visa\\\">Visa</option>\\n                                                    <option value=\\\"mastercard\\\">Mastercard</option>\\n                                                    <option value=\\\"discover\\\">Discover</option>\\n                                                    <option value=\\\"amex\\\">American Express</option>\\n                                                </select>\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label for=\\\"cardHolder\\\">* Card Holder</label>\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cardHolder\\\" required=\\\"required\\\" placeholder=\\\"Card Holder Name\\\" name=\\\"holderName\\\" [(ngModel)]=\\\"payment.holderName\\\" />\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label for=\\\"cardNumber\\\">* Card Number</label>\\n                                                <div class=\\\"input-group\\\">\\n                                                    <input required=\\\"required\\\" id=\\\"cardNumber\\\" type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"cardNumber\\\" placeholder=\\\"Valid Card Number\\\" name=\\\"cardNumber\\\" [(ngModel)]=\\\"payment.cardNumber\\\" />\\n                                                    <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-credit-card\\\"\\n                                                     aria-hidden=\\\"true\\\"></i></span>\\n                                                 </div>\\n                                             </div>\\n                                         </div>\\n                                     </div>\\n                                     <div class=\\\"row\\\">\\n                                        <div class=\\\"col-xs-7 col-md-7\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <label>* Expiration Date</label>\\n                                                <div class=\\\"row\\\">\\n                                                    <div class=\\\"col-xs-6\\\">\\n                                                        <select class=\\\"form-control\\\" name=\\\"expiryMonth\\\" required=\\\"required\\\" [(ngModel)]=\\\"payment.expiryMonth\\\">\\n                                                            <option value=\\\"\\\" disabled=\\\"disabled\\\">\\n                                                                --Month--\\n                                                            </option>\\n                                                            <option value=\\\"1\\\">Jan (01)</option>\\n                                                            <option value=\\\"2\\\">Feb (02)</option>\\n                                                            <option value=\\\"3\\\">Mar (03)</option>\\n                                                            <option value=\\\"4\\\">Apr (04)</option>\\n                                                            <option value=\\\"5\\\">May (05)</option>\\n                                                            <option value=\\\"6\\\">June (06)</option>\\n                                                            <option value=\\\"7\\\">July (07)</option>\\n                                                            <option value=\\\"8\\\">Aug (08)</option>\\n                                                            <option value=\\\"9\\\">Sep (09)</option>\\n                                                            <option value=\\\"10\\\">Oct (10)</option>\\n                                                            <option value=\\\"11\\\">Nov (11)</option>\\n                                                            <option value=\\\"12\\\">Dec (12)</option>\\n                                                        </select>\\n                                                    </div>\\n                                                    <div class=\\\"col-xs-6\\\">\\n                                                        <select class=\\\"form-control\\\" name=\\\"expiryYear\\\" [(ngModel)]=\\\"payment.expiryYear\\\">\\n                                                            <option value=\\\"\\\" disabled=\\\"disabled\\\">--Year--\\n                                                            </option>\\n                                                            <option value=\\\"17\\\">2017</option>\\n                                                            <option value=\\\"18\\\">2018</option>\\n                                                            <option value=\\\"19\\\">2019</option>\\n                                                            <option value=\\\"20\\\">2020</option>\\n                                                            <option value=\\\"21\\\">2021</option>\\n                                                            <option value=\\\"22\\\">2022</option>\\n                                                            <option value=\\\"23\\\">2023</option>\\n                                                            <option value=\\\"23\\\">2024</option>\\n                                                            <option value=\\\"23\\\">2025</option>\\n                                                            <option value=\\\"23\\\">2026</option>\\n                                                            <option value=\\\"23\\\">2027</option>\\n                                                            <option value=\\\"23\\\">2028</option>\\n                                                            <option value=\\\"23\\\">2029</option>\\n                                                        </select>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-xs-5 col-md-5 pull-right\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <label for=\\\"cardCVC\\\">CV Code</label>\\n                                                <input id=\\\"cardCVC\\\" type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"cardCVC\\\" placeholder=\\\"CVC\\\" name=\\\"cvc\\\" [(ngModel)]=\\\"payment.cvc\\\" />\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <!-- CREDIT CARD FORM ENDS HERE -->\\n                                    <div class=\\\"checkbox\\\">\\n                                        <label>\\n                                            <input id=\\\"theSameAsShippingAddress\\\" type=\\\"checkbox\\\"\\n                                            name=\\\"billingSameAsShipping\\\" value=\\\"true\\\" (click)=\\\"setBillingAsShipping($event.target.checked)\\\" /> The same as shipping\\n                                            address\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"form-group \\\">\\n                                        <label for=\\\"billingName \\\">* Name</label>\\n                                        <input type=\\\"text \\\" class=\\\"form-control billingAddress \\\" id=\\\"billingName \\\" placeholder=\\\"Recevier Name \\\" name=\\\"billingAddressName \\\" [(ngModel)]=\\\"billingAddress.billingAddressName\\\" />\\n                                    </div>\\n                                    <div class=\\\"form-group \\\">\\n                                        <label for=\\\"billingAddress \\\">* Street Address</label>\\n                                        <input type=\\\"text \\\" id=\\\"billingAddress \\\" class=\\\"form-control billingAddress \\\" placeholder=\\\"Street Address 1 \\\" name=\\\"billingAddressStreet1 \\\" [(ngModel)]=\\\"billingAddress.billingAddressStreet1\\\" />\\n                                    </div>\\n                                    <div class=\\\"form-group \\\">\\n                                        <input type=\\\"text \\\" class=\\\"form-control billingAddress \\\" placeholder=\\\"Street Address 2 \\\" name=\\\"billingAddressStreet2 \\\" [(ngModel)]=\\\"billingAddress.billingAddressStreet2\\\" />\\n                                    </div>\\n                                    <div class=\\\"row \\\">\\n                                        <div class=\\\"col-xs-4 \\\">\\n                                            <div class=\\\"form-group \\\">\\n                                                <label for=\\\"billingCity \\\">* City</label>\\n                                                <input type=\\\"text \\\" class=\\\"form-control billingAddress \\\" id=\\\"billingCity \\\" placeholder=\\\"City \\\" name=\\\"billingAddressCity \\\" [(ngModel)]=\\\"billingAddress.billingAddressCity\\\" />\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-xs-4 \\\">\\n                                            <div class=\\\"form-group \\\">\\n                                                <label for=\\\"billingState \\\">* State</label>\\n                                                <select id=\\\"billingState \\\" class=\\\"form-control billingAddress \\\" name=\\\"billingAddressState \\\" [(ngModel)]=\\\"billingAddress.billingAddressState\\\">\\n                                                    <option value=\\\"\\\" disabled=\\\"disabled \\\">-- state --\\n                                                    </option>\\n                                                    <option *ngFor=\\\"let state of stateList\\\">{{state}}\\n                                                    </option>\\n                                                </select>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-xs-4 \\\">\\n                                            <div class=\\\"form-group \\\">\\n                                                <label for=\\\"billingZipcode \\\">* Zipcode</label>\\n                                                <input type=\\\"text \\\" class=\\\"form-control billingAddress \\\" id=\\\"billingZipcode \\\" placeholder=\\\"Zipcode \\\" name=\\\"billingAddressZipcode \\\" [(ngModel)]=\\\"billingAddress.billingAddressZipcode \\\" />\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <a md-raised-button class=\\\"mat-primary\\\" (click)=\\\"goToReview()\\\">Next</a>\\n                                </div>\\n                            </div>\\n                        </md-tab>\\n                        <!--3. Review Items and Shipping-->\\n                        <md-tab label=\\\"3. Review\\\">\\n                            <div class=\\\"panel panel-default \\\">\\n                                <div class=\\\"panel-heading \\\">\\n                                    <h4 class=\\\"panel-title \\\">\\n                                        3. Review Items and Shipping\\n                                    </h4>\\n                                </div>\\n                                <div class=\\\"panel-body \\\">\\n                                    <h4>Choose your shipping method:</h4>\\n                                    <div class=\\\"radio\\\">\\n                                        <label>\\n                                            <input type=\\\"radio\\\" name=\\\"shippingMethod\\\" value=\\\"groundShipping\\\" [(ngModel)]=\\\"shippingMethod\\\" /> Ground Shipping\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"radio\\\">\\n                                        <label>\\n                                            <input type=\\\"radio\\\" name=\\\"shippingMethod\\\" value=\\\"premiumShipping\\\" [(ngModel)]=\\\"shippingMethod\\\" /> Premium Shipping\\n                                        </label>\\n                                    </div>\\n\\n                                    <div class=\\\"row \\\">\\n                                        <div class=\\\"col-xs-8 \\\">\\n                                            <h4>Products</h4></div>\\n                                            <div class=\\\"col-xs-2 \\\">\\n                                                <h4>Price</h4></div>\\n                                                <div class=\\\"col-xs-2 text-center \\\">\\n                                                    <h4>Qty</h4></div>\\n                                                </div>\\n                                                <!--*******  display products in cart  ********-->\\n                                                <div class=\\\"row \\\" *ngFor=\\\"let cartItem of cartItemList \\\">\\n                                                    <hr/>\\n                                                    <div class=\\\"col-xs-2 \\\">\\n                                                        <a md-button (click)=\\\"onSelect(cartItem.book)\\\"><img class=\\\"img-responsive shelf-book\\\" src=\\\"{{serverPath}}/image/book/{{cartItem.book.id}}.png\\\" style=\\\"width:70px;\\\" /></a>\\n                                                    </div>\\n                                                    <div class=\\\"col-xs-6 \\\">\\n                                                        <a class=\\\"pointer\\\" (click)=\\\"onSelect(cartItem.book)\\\"><h4>{{cartItem.book.title}}</h4></a>\\n                                                        <p *ngIf=\\\"cartItem.book.inStockNumber > 10\\\" style=\\\"color: green;\\\">In Stock</p>\\n                                                        <p *ngIf=\\\"cartItem.book.inStockNumber < 10 && cartItem.book.inStockNumber > 0\\\" style=\\\"color: green;\\\"> Only <span>{{cartItem.book.inStockNumber}}</span> In Stock\\n                                                        </p>\\n                                                        <p style=\\\"color: darkred;\\\" *ngIf=\\\"cartItem.book.inStockNumber==0\\\">Product Unavailable</p>\\n                                                    </div>\\n                                                    <div class=\\\"col-xs-2 \\\">\\n                                                        <h5 style=\\\"color: #db3208; font-size: large;\\\">$<span [ngClass]=\\\"{'text-strike': cartItem.book.inStockNumber == 0 }\\\"\\n                                                           >{{cartItem.book.ourPrice}}</span>\\n                                                       </h5>\\n                                                   </div>\\n                                                   <div class=\\\"col-xs-2 text-center \\\">\\n                                                    <h5 style=\\\"font-size: large \\\">{{cartItem.qty}}</h5>\\n                                                </div>\\n                                            </div>\\n                                            <hr/>\\n                                            <h4 class=\\\"col-xs-12 text-right\\\"><Strong style=\\\"font-size: large\\\">Total Price (<span\\n                                                >{{cartItemNumber}}</span> items): </Strong><span\\n                                                style=\\\"color: #db3208; font-size: large;\\\">$<span\\n                                                ></span>{{shoppingCart.grandTotal}}</span></h4>\\n                                                <br/>\\n                                                <br/>\\n                                                <button md-raised-button type=\\\"submit \\\" class=\\\"btn-block mat-primary\\\">Place your order\\n                                                </button>\\n                                                <p>By placing your order, you agree to Ficstore <a href=\\\"# \\\">privacy</a> notice and\\n                                                    <a href=\\\"# \\\">conditions</a> of use.</p>\\n                                                </div>\\n                                            </div>\\n                                        </md-tab>\\n                                    </md-tab-group>\\n                                </div>\\n                            </form>\\n                        </div>\\n                    </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/order/order.component.html\n// module id = ../../../../../src/app/components/order/order.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\nimport {AppConst} from '../../constants/app-const';\nimport {Book} from '../../models/book';\nimport {Router, NavigationExtras} from '@angular/router';\nimport {CartService} from '../../services/cart.service';\nimport {ShippingService} from '../../services/shipping.service';\nimport {PaymentService} from '../../services/payment.service';\nimport {CheckoutService} from '../../services/checkout.service';\nimport {CartItem} from '../../models/cart-item';\nimport {ShoppingCart} from '../../models/shopping-cart';\nimport {ShippingAddress} from '../../models/shipping-address';\nimport {BillingAddress} from '../../models/billing-address';\nimport {UserPayment} from '../../models/user-payment';\nimport {UserBilling} from '../../models/user-billing';\nimport {UserShipping} from '../../models/user-shipping';\nimport {Payment} from '../../models/payment';\nimport {Order} from '../../models/order';\n\n@Component({\n    selector: 'app-order',\n    templateUrl: './order.component.html',\n    styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n    serverPath = AppConst.serverPath;\n    selectedBook: Book;\n    cartItemList: CartItem[] = [];\n    cartItemNumber: number;\n    shoppingCart: ShoppingCart = new ShoppingCart();\n    cartItemUpdated: boolean;\n    shippingAddress: ShippingAddress = new ShippingAddress();\n    billingAddress: BillingAddress = new BillingAddress();\n    userPayment: UserPayment = new UserPayment();\n    userShipping: UserShipping = new UserShipping();\n    userBilling: UserBilling = new UserBilling();\n    userShippingList: UserShipping[] = [];\n    userPaymentList: UserPayment[] = [];\n    payment: Payment = new Payment();\n    selectedTab: number;\n    emptyShippingList = true;\n    emptyPaymentList = true;\n    stateList: string[] = [];\n    shippingMethod: string;\n    order: Order = new Order();\n    missingRequiredField;\n\n\n    constructor(\n        private router: Router,\n        private cartService: CartService,\n        private shippingService: ShippingService,\n        private paymentService: PaymentService,\n        private checkoutService: CheckoutService\n    ) {\n    }\n\n    onSelect(book: Book) {\n        this.selectedBook = book;\n        this.router.navigate(['/bookDetail', this.selectedBook.id]);\n    }\n\n    selectedChange(val: number) {\n        this.selectedTab = val;\n    }\n\n    goToPayment() {\n        this.selectedTab = 1;\n    }\n\n    goToReview() {\n        this.selectedTab = 2;\n    }\n\n    getCartItemList() {\n        this.cartService.getCartItemList().subscribe(\n            res => {\n                this.cartItemList = res.json();\n                this.cartItemNumber = this.cartItemList.length;\n            },\n            error => {\n                console.log(error.text());\n            }\n        );\n    }\n\n    setShippingAddress(userShipping: UserShipping) {\n        this.shippingAddress.shippingAddressName = userShipping.userShippingName;\n        this.shippingAddress.shippingAddressStreet1 = userShipping.userShippingStreet1;\n        this.shippingAddress.shippingAddressStreet2 = userShipping.userShippingStreet2;\n        this.shippingAddress.shippingAddressCity = userShipping.userShippingCity;\n        this.shippingAddress.shippingAddressState = userShipping.userShippingState;\n        this.shippingAddress.shippingAddressCountry = userShipping.userShippingCountry;\n        this.shippingAddress.shippingAddressZipcode = userShipping.userShippingZipcode;\n    }\n\n    setPaymentMethod(userPayment: UserPayment) {\n        this.payment.type = userPayment.type;\n        this.payment.cardNumber = userPayment.cardNumber;\n        this.payment.expiryMonth = userPayment.expiryMonth;\n        this.payment.expiryYear = userPayment.expiryYear;\n        this.payment.cvc = userPayment.cvc;\n        this.payment.holderName = userPayment.holderName;\n        this.payment.defaultPayment = userPayment.defaultPayment;\n        this.billingAddress.billingAddressName = userPayment.userBilling.userBillingName;\n        this.billingAddress.billingAddressStreet1 = userPayment.userBilling.userBillingStreet1;\n        this.billingAddress.billingAddressStreet2 = userPayment.userBilling.userBillingStreet2;\n        this.billingAddress.billingAddressCity = userPayment.userBilling.userBillingCity;\n        this.billingAddress.billingAddressState = userPayment.userBilling.userBillingState;\n        this.billingAddress.billingAddressCountry = userPayment.userBilling.userBillingCountry;\n        this.billingAddress.billingAddressZipcode = userPayment.userBilling.userBillingZipcode;\n    }\n\n    setBillingAsShipping(checked: boolean) {\n        console.log('same as shipping')\n\n        if (checked) {\n            this.billingAddress.billingAddressName = this.shippingAddress.shippingAddressName;\n            this.billingAddress.billingAddressStreet1 = this.shippingAddress.shippingAddressStreet1;\n            this.billingAddress.billingAddressStreet2 = this.shippingAddress.shippingAddressStreet2;\n            this.billingAddress.billingAddressCity = this.shippingAddress.shippingAddressCity;\n            this.billingAddress.billingAddressState = this.shippingAddress.shippingAddressState;\n            this.billingAddress.billingAddressCountry = this.shippingAddress.shippingAddressCountry;\n            this.billingAddress.billingAddressZipcode = this.shippingAddress.shippingAddressZipcode;\n        } else {\n            this.billingAddress.billingAddressName = '';\n            this.billingAddress.billingAddressStreet1 = '';\n            this.billingAddress.billingAddressStreet2 = '';\n            this.billingAddress.billingAddressCity = '';\n            this.billingAddress.billingAddressState = '';\n            this.billingAddress.billingAddressCountry = '';\n            this.billingAddress.billingAddressZipcode = '';\n        }\n    }\n\n    onSubmit() {\n        this.checkoutService.checkout(\n            this.shippingAddress,\n            this.billingAddress,\n            this.payment,\n            this.shippingMethod\n        ).subscribe(\n            res => {\n                this.order = res.json();\n                console.log(this.order);\n\n                const navigationExtras: NavigationExtras = {\n                    queryParams: {\n                        'order': JSON.stringify(this.order)\n                    }\n                };\n\n                this.router.navigate(['/orderSummary'], navigationExtras);\n            },\n            error => {\n                console.log(error.text());\n            }\n        );\n    }\n\n    ngOnInit() {\n        this.getCartItemList();\n\n\n        this.cartService.getShoppingCart().subscribe(\n            res => {\n                console.log(res.json());\n                this.shoppingCart = res.json();\n            },\n            error => {\n                console.log(error.text());\n            }\n        );\n\n        this.shippingService.getUserShippingList().subscribe(\n            res => {\n                console.log(res.json());\n                this.userShippingList = res.json();\n                if (this.userShippingList.length) {\n                    this.emptyShippingList = false;\n\n                    for (const userShipping of this.userShippingList) {\n                        if (userShipping.userShippingDefault) {\n                            this.setShippingAddress(userShipping);\n                            return;\n                        }\n                    }\n                }\n            },\n            error => {\n                console.log(error.text());\n            }\n        );\n\n        this.paymentService.getUserPaymentList().subscribe(\n            res => {\n                console.log(res.json());\n                this.userPaymentList = res.json();\n                this.emptyPaymentList = false;\n\n                if (this.userPaymentList.length) {\n                    this.emptyPaymentList = false;\n\n                    for (const userPayment of this.userPaymentList) {\n                        if (userPayment.defaultPayment) {\n                            this.setPaymentMethod(userPayment);\n                            return;\n                        }\n                    }\n                }\n            },\n            error => {\n                console.log(error.text());\n            }\n        );\n\n        for (const s in AppConst.usStates) {\n            this.stateList.push(s);\n        }\n\n        this.payment.type = '';\n        this.payment.expiryMonth = '';\n        this.payment.expiryYear = '';\n        this.billingAddress.billingAddressState = '';\n        this.shippingAddress.shippingAddressState = '';\n        this.shippingMethod = 'groundShipping';\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/order/order.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/shopping-cart/shopping-cart.component.css\n// module id = ../../../../../src/app/components/shopping-cart/shopping-cart.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <p style=\\\"text-align:center;\\\">\\n            <img src=\\\"../../../assets/image/logo.png\\\" height=250>\\n        </p>\\n        <div class=\\\"col-xs-8\\\">\\n            <h2 style=\\\"font-family:helvetica;\\\"><span>Shopping Cart</span></h2>\\n        </div>\\n\\n    </div>\\n    \\n    <hr class=\\\"style18\\\">\\n\\n    <div class=\\\"row\\\" style=\\\"margin-top: 120px;\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-6 text-left\\\">\\n                    <a md-raised-button class=\\\"mat-warn\\\" routerLink=\\\"/bookList\\\">Continue Shopping</a>\\n                </div>\\n                <div class=\\\"col-xs-6 text-right\\\">\\n                    <a md-raised-button class=\\\"mat-warn\\\" routerLink=\\\"/checkout\\\">Check Out</a>\\n                </div>\\n            </div>\\n            <br/>\\n            <div *ngIf=\\\"cartItemUpdated\\\" class=\\\"alert alert-success\\\">\\n                Cart Item Updated Successfully!\\n            </div>\\n            <div *ngIf=\\\"notEnoughStock\\\" class=\\\"alert alert-warning\\\">\\n                Oops, some of the products don't have enough stock. Please update product quantity.\\n            </div>\\n            <div *ngIf=\\\"emptyCart\\\" class=\\\"alert alert-warning\\\">\\n                Oops, your cart is empty. See if you can find what you link in the bookshelf and add them to cart.\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-8\\\">\\n                    <h4>Products</h4>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <h4>Price</h4>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <h4>Qty</h4>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" *ngFor=\\\"let cartItem of cartItemList\\\">\\n                <hr/>\\n                <div class=\\\"col-xs-2\\\">\\n                    <a md-button (click)=\\\"onSelect(cartItem.book)\\\"><img class=\\\"img-responsive\\\" src=\\\"{{serverPath}}/image/book/{{cartItem.book.id}}.png\\\" style=\\\"width:70px;\\\" /></a>\\n                </div>\\n                <div class=\\\"col-xs-6\\\">\\n                    <a class=\\\"pointer\\\" (click)=\\\"onSelect(cartItem.book)\\\">\\n                        <h4>{{cartItem.book.title}}</h4></a>\\n                    <p *ngIf=\\\"cartItem.book.inStockNumber > 10\\\" style=\\\"color:green;\\\">In Stock</p>\\n                    <p *ngIf=\\\"cartItem.book.inStockNumber < 10 && cartItem.book.inStockNumber > 0\\\" style=\\\"color:green;\\\">Only <span>{{cartItem.book.inStockNumber}}</span> In Stock</p>\\n                    <p *ngIf=\\\"cartItem.book.inStockNumber == 0\\\" style=\\\"color:darkred;\\\">Product Unavailable</p>\\n                    <a class=\\\"pointer\\\" (click)=\\\"onRemoveCartItem(cartItem)\\\">Remove</a>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <h5 style=\\\"color:#db3208; font-size:large;\\\">$<span [ngClass]=\\\"{'text-strike': cartItem.book.inStockNumber == 0}\\\">{{cartItem.book.ourPrice}}</span>\\n            \\t\\t\\t</h5>\\n                </div>\\n                <div class=\\\"col-xs-2\\\">\\n                    <input hidden=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"cartItem.id\\\" />\\n                    <input id=\\\"cartItem.id\\\" name=\\\"qty\\\" [disabled]=\\\"cartItem.book.inStockNumber==0\\\" class=\\\"form-control cartItemQty\\\" [(ngModel)]=\\\"cartItem.qty\\\" (ngModelChange)=\\\"cartItem.toUpdate=true\\\" />\\n                    <a md-button *ngIf=\\\"cartItem.toUpdate\\\" class=\\\"pointer mat-warn\\\" (click)=\\\"onUpdateCartItem(cartItem)\\\">Update</a>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <hr />\\n                <h4 class=\\\"col-xs-12 text-right\\\"><strong style=\\\"font-size: large\\\">Total Price (<span>{{cartItemNumber}}</span> items): </strong><span style=\\\"color:#db3208;font-size: large\\\">$ <span>{{shoppingCart.grandTotal}}</span></span></h4>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/shopping-cart/shopping-cart.component.html\n// module id = ../../../../../src/app/components/shopping-cart/shopping-cart.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\nimport {AppConst} from '../../constants/app-const';\nimport {Router} from '@angular/router';\nimport {Book} from '../../models/book';\nimport {CartService} from '../../services/cart.service';\nimport {ShoppingCart} from '../../models/shopping-cart';\nimport {CartItem} from '../../models/cart-item';\n\n@Component({\n    selector: 'app-shopping-cart',\n    templateUrl: './shopping-cart.component.html',\n    styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit {\n    serverPath = AppConst.serverPath;\n    selectedBook: Book;\n    cartItemList: CartItem[] = [];\n    cartItemNumber: number;\n    shoppingCart: ShoppingCart = new ShoppingCart();\n    cartItemUpdated: boolean;\n    emptyCart: boolean;\n    notEnoughStock: boolean;\n\n    constructor(\n        private router: Router,\n        private cartService: CartService\n    ) {\n    }\n\n    onSelect(book: Book) {\n        this.selectedBook = book;\n        this.router.navigate(['/bookDetail', this.selectedBook.id]);\n    }\n\n    onRemoveCartItem(cartItem: CartItem) {\n        this.cartService.removeCartItem(cartItem.id).subscribe(\n            res => {\n                console.log(res.text());\n                this.getCartItemList();\n                this.getShoppingCart();\n            },\n            error => {\n                console.log(error.text());\n            }\n        );\n    }\n\n    onUpdateCartItem(cartItem: CartItem) {\n        this.cartService.updateCartItem(cartItem.id, cartItem.qty).subscribe(\n            res => {\n                console.log(res.text());\n                this.cartItemUpdated = true;\n                this.getShoppingCart();\n            },\n            error => {\n                console.log(error.text());\n            }\n        )\n    }\n\n    getCartItemList() {\n        this.cartService.getCartItemList().subscribe(\n            res => {\n                this.cartItemList = res.json();\n                this.cartItemNumber = this.cartItemList.length;\n            },\n            error => {\n                console.log(error.text());\n            }\n        )\n    }\n\n    getShoppingCart() {\n        this.cartService.getShoppingCart().subscribe(\n            res => {\n                console.log(res.json());\n                this.shoppingCart = res.json();\n            },\n            error => {\n                console.log(error.text());\n            }\n        )\n    }\n\n    onCheckout() {\n        if (this.cartItemNumber == 0) {\n            this.emptyCart = true;\n        } else {\n            for (let item of this.cartItemList) {\n                if (item.qty > item.book.inStockNumber) {\n                    console.log('not enough stock on some item');\n                    this.notEnoughStock = true;\n                    return;\n                }\n            }\n\n            // this.router.navigate('[/order]');\n        }\n    }\n\n    ngOnInit() {\n        this.getCartItemList();\n        this.getShoppingCart();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/components/shopping-cart/shopping-cart.component.ts","export class AppConst {\r\n  public static serverPath = 'http://127.0.0.1:8181';\r\n\r\n  public static usStates = {\r\n    'AL': 'Alabama',\r\n    'AK': 'Alaska',\r\n    'AS': 'American Samoa',\r\n    'AZ': 'Arizona',\r\n    'AR': 'Arkansas',\r\n    'CA': 'California',\r\n    'CO': 'Colorado',\r\n    'CT': 'Connecticut',\r\n    'DE': 'Delaware',\r\n    'DC': 'District Of Columbia',\r\n    'FM': 'Federated States Of Micronesia',\r\n    'FL': 'Florida',\r\n    'GA': 'Georgia',\r\n    'GU': 'Guam',\r\n    'HI': 'Hawaii',\r\n    'ID': 'Idaho',\r\n    'IL': 'Illinois',\r\n    'IN': 'Indiana',\r\n    'IA': 'Iowa',\r\n    'KS': 'Kansas',\r\n    'KY': 'Kentucky',\r\n    'LA': 'Louisiana',\r\n    'ME': 'Maine',\r\n    'MH': 'Marshall Islands',\r\n    'MD': 'Maryland',\r\n    'MA': 'Massachusetts',\r\n    'MI': 'Michigan',\r\n    'MN': 'Minnesota',\r\n    'MS': 'Mississippi',\r\n    'MO': 'Missouri',\r\n    'MT': 'Montana',\r\n    'NE': 'Nebraska',\r\n    'NV': 'Nevada',\r\n    'NH': 'New Hampshire',\r\n    'NJ': 'New Jersey',\r\n    'NM': 'New Mexico',\r\n    'NY': 'New York',\r\n    'NC': 'North Carolina',\r\n    'ND': 'North Dakota',\r\n    'MP': 'Northern Mariana Islands',\r\n    'OH': 'Ohio',\r\n    'OK': 'Oklahoma',\r\n    'OR': 'Oregon',\r\n    'PW': 'Palau',\r\n    'PA': 'Pennsylvania',\r\n    'PR': 'Puerto Rico',\r\n    'RI': 'Rhode Island',\r\n    'SC': 'South Carolina',\r\n    'SD': 'South Dakota',\r\n    'TN': 'Tennessee',\r\n    'TX': 'Texas',\r\n    'UT': 'Utah',\r\n    'VT': 'Vermont',\r\n    'VI': 'Virgin Islands',\r\n    'VA': 'Virginia',\r\n    'WA': 'Washington',\r\n    'WV': 'West Virginia',\r\n    'WI': 'Wisconsin',\r\n    'WY': 'Wyoming'\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/constants/app-const.ts","import {Order} from './order';\n\nexport class BillingAddress {\n\tpublic id: number;\n\tpublic billingAddressName: string;\n\tpublic billingAddressStreet1: string;\n\tpublic billingAddressStreet2: string;\n\tpublic billingAddressCity: string;\n\tpublic billingAddressState: string;\n\tpublic billingAddressCountry: string;\n\tpublic billingAddressZipcode: string;\n\tpublic order: Order;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/billing-address.ts","export class Book {\n\tpublic id: number;\n\tpublic title: string;\n\tpublic author: string;\n\tpublic publisher: string;\n\tpublic publicationDate: string;\n\tpublic language: string;\n\tpublic category: string;\n\tpublic numberOfPages: number;\n\tpublic format: string;\n\tpublic isbn: string;\n\tpublic shippingWeight: number;\n\tpublic listPrice: number;\n\tpublic ourPrice: number;\n\tpublic active: boolean;\n\tpublic description: string;\n\tpublic inStockNumber: number;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/book.ts","import {CartItem} from './cart-item';\n\nexport class Order {\n\n    public id: number;\n    public orderDate: string;\n    public shippingDate: string;\n    public shippingMethod: string;\n    public orderStatus: string;\n    public orderTotal: number;\n    public cartItemList: CartItem[];\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/order.ts","import {BillingAddress} from './billing-address';\n\nexport class Payment {\n\tpublic id: number;\n\tpublic type: string;\n\tpublic cardName: string;\n\tpublic cardNumber: string;\n\tpublic expiryMonth: string;\n\tpublic expiryYear: string;\n\tpublic cvc: number;\n\tpublic holderName: string;\n\tpublic defaultPayment: boolean;\n\tpublic billingAddress: BillingAddress;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/payment.ts","import {Order} from './order';\n\nexport class ShippingAddress {\n\tpublic id: number;\n\tpublic shippingAddressName: string;\n\tpublic shippingAddressStreet1: string;\n\tpublic shippingAddressStreet2: string;\n\tpublic shippingAddressCity: string;\n\tpublic shippingAddressState: string;\n\tpublic shippingAddressCountry: string;\n\tpublic shippingAddressZipcode: string;\n\tpublic shippingAddressDefault: boolean;\n\tpublic order: Order;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/shipping-address.ts","import {User} from './user';\n\nexport class ShoppingCart {\n\tpublic id: number;\n\tpublic grandTotal: number;\n\tpublic user: User;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/shopping-cart.ts","export class UserBilling {\n\tpublic id: number;\n\tpublic userBillingName: string;\n\tpublic userBillingStreet1: string;\n\tpublic userBillingStreet2: string;\n\tpublic userBillingCity: string;\n\tpublic userBillingState: string;\n\tpublic userBillingCountry: string;\n\tpublic userBillingZipcode: string;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/user-billing.ts","import {UserBilling} from './user-billing';\n\nexport class UserPayment {\n\tpublic id: number;\n\tpublic type: string;\n\tpublic cardName: string;\n\tpublic cardNumber: string;\n\tpublic expiryMonth: string;\n\tpublic expiryYear: string;\n\tpublic cvc: number;\n\tpublic holderName: string;\n\tpublic defaultPayment: boolean;\n\tpublic userBilling: UserBilling;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/user-payment.ts","export class UserShipping {\n\tpublic id: number;\n\tpublic userShippingName: string;\n\tpublic userShippingStreet1: string;\n\tpublic userShippingStreet2: string;\n\tpublic userShippingCity: string;\n\tpublic userShippingState: string;\n\tpublic userShippingCountry: string;\n\tpublic userShippingZipcode: string;\n\tpublic userShippingDefault: boolean;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/user-shipping.ts","import {UserPayment} from './user-payment';\nimport {UserShipping} from './user-shipping';\n\nexport class User {\n    public id: number;\n    public firstName: string;\n    public lastName: string;\n    public username: string;\n    public password: string;\n    public email: string\n    public phone: string;\n    public enabled: boolean;\n    public userPaymentList: UserPayment[];\n    public userShippingList: UserShipping[];\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/models/user.ts","import {Injectable} from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport {AppConst} from '../constants/app-const';\n\n@Injectable()\nexport class BookService {\n\n  constructor(private http: Http) {\n  }\n\n  getBookList() {\n    let url = AppConst.serverPath + '/book/bookList';\n\n    let tokenHeader = new Headers({\n      'Content-Type': 'application/json',\n      'x-auth-token': localStorage.getItem('xAuthToken')\n    });\n    return this.http.get(url, {headers: tokenHeader});\n  }\n\n  getBook(id: number) {\n    let url = AppConst.serverPath + '/book/' + id;\n\n    let tokenHeader = new Headers({\n      'Content-Type': 'application/json',\n      'x-auth-token': localStorage.getItem('xAuthToken')\n    });\n    return this.http.get(url, {headers: tokenHeader});\n  }\n\n  searchBook(keyword: string) {\n    const url = AppConst.serverPath + '/book/searchBook';\n    const tokenHeader = new Headers({\n      'Content-Type': 'application/json',\n      'x-auth-token': localStorage.getItem('xAuthToken')\n    });\n    return this.http.post(url, keyword, {headers: tokenHeader});\n  }\n\n  searchBookAPI(query) {\n    const API_URL = 'https://www.googleapis.com/books/v1/volumes?q=';\n    return fetch(API_URL + query + '&maxResults=40').then(response => response.json());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/book.service.ts","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport {AppConst} from '../constants/app-const';\n\n@Injectable()\nexport class CartService {\n\n  constructor(private http:Http) { }\n\n  addItem(id:number, qty: number) {\n  \tlet url = AppConst.serverPath+\"/cart/add\";\n  \tlet cartItemInfo = {\n  \t\t\"bookId\" : id,\n  \t\t\"qty\" : qty\n  \t}\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, cartItemInfo, {headers: tokenHeader});\n  }\n\n  getCartItemList() {\n  \tlet url = AppConst.serverPath+\"/cart/getCartItemList\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.get(url, {headers: tokenHeader});\n  }\n\n  getShoppingCart() {\n  \tlet url = AppConst.serverPath+\"/cart/getShoppingCart\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.get(url, {headers: tokenHeader});\n  }\n\n  updateCartItem(cartItemId: number, qty: number) {\n  \tlet url = AppConst.serverPath+\"/cart/updateCartItem\";\n  \tlet cartItemInfo = {\n  \t\t\"cartItemId\" : cartItemId,\n  \t\t\"qty\" : qty\n  \t}\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, cartItemInfo, {headers: tokenHeader});\n  }\n\n  removeCartItem(id: number) {\n  \tlet url = AppConst.serverPath+\"/cart/removeItem\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, id, {headers: tokenHeader});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/cart.service.ts","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport {AppConst} from '../constants/app-const';\nimport {ShippingAddress} from '../models/shipping-address';\nimport {BillingAddress} from '../models/billing-address';\nimport {Payment} from '../models/payment';\n\n\n@Injectable()\nexport class CheckoutService {\n\n  constructor(private http: Http) { }\n\n  checkout(\n  \tshippingAddress: ShippingAddress,\n  \tbillingAddress: BillingAddress,\n  \tpayment:Payment,\n  \tshippingMethod:string\n  \t){\n\t\tlet url = AppConst.serverPath+\"/checkout/checkout\";\n\t\tlet order ={\n\t\t\t\"shippingAddress\" : shippingAddress,\n\t\t\t\"billingAddress\" : billingAddress,\n\t\t\t\"payment\" : payment,\n\t\t\t\"shippingMethod\" : shippingMethod\n\t\t}\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, order, {headers: tokenHeader});\n  }\n\n  getUserOrder() {\n  \tlet url = AppConst.serverPath+\"/checkout/getUserOrder\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.get(url, {headers: tokenHeader});\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/checkout.service.ts","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport {AppConst} from '../constants/app-const';\nimport {Router} from '@angular/router';\n\n@Injectable()\nexport class LoginService {\n  private serverPath:string = AppConst.serverPath;\n\n  constructor(private http:Http, private router:Router) { }\n\n  sendCredential(username: string, password: string) {\n    let url = this.serverPath+'/token';\n    let encodedCredentials = btoa(username+\":\"+password);\n    let basicHeader = \"Basic \"+encodedCredentials;\n    let headers = new Headers({\n      'Content-Type' : 'application/x-www-form-urlencoded',\n      'Authorization' : basicHeader\n    });\n\n    return this.http.get(url, {headers: headers});\n  }\n\n  checkSession() {\n    let url = this.serverPath+'/checkSession';\n    let headers = new Headers({\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.get(url, {headers: headers});\n  }\n\n  logout() {\n    let url = this.serverPath+'/user/logout';\n    let headers = new Headers({\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.post(url, '', {headers: headers});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/login.service.ts","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport {AppConst} from '../constants/app-const';\nimport {Order} from '../models/order';\n\n@Injectable()\nexport class OrderService {\n\n  constructor(private http:Http) { }\n\n  getOrderList() {\n  \tlet url = AppConst.serverPath+\"/order/getOrderList\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.get(url, {headers: tokenHeader});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/order.service.ts","import { Injectable } from '@angular/core';\nimport { AppConst } from '../constants/app-const';\nimport { Http, Headers } from '@angular/http';\nimport { UserPayment } from '../models/user-payment';\n\n@Injectable()\nexport class PaymentService {\n  private serverPath: string = AppConst.serverPath;\n\n  constructor(private http : Http) { }\n\n  newPayment(payment: UserPayment) {\n    let url = this.serverPath+\"/payment/add\";\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, JSON.stringify(payment), {headers: tokenHeader});\n  }\n\n  getUserPaymentList() {\n    let url = this.serverPath+\"/payment/getUserPaymentList\";\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.get(url,  {headers: tokenHeader});\n  }\n\n  removePayment(id: number) {\n    let url = this.serverPath+\"/payment/remove\";\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, id, {headers: tokenHeader});\n  }\n\n  setDefaultPayment (id: number) {\n    let url = this.serverPath+\"/payment/setDefault\";\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, id, {headers: tokenHeader});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/payment.service.ts","import { Injectable } from '@angular/core';\nimport { AppConst } from '../constants/app-const';\nimport { Http, Headers } from '@angular/http';\nimport { UserShipping } from '../models/user-shipping';\n\n@Injectable()\nexport class ShippingService {\n\n  private serverPath: string = AppConst.serverPath;\n\n  constructor(private http : Http) { }\n\n  newShipping(shipping: UserShipping) {\n  \tlet url = this.serverPath+\"/shipping/add\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, JSON.stringify(shipping), {headers: tokenHeader});\n  }\n\n  getUserShippingList() {\n  \tlet url = this.serverPath+\"/shipping/getUserShippingList\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.get(url, {headers: tokenHeader});\n  }\n\n  removeShipping(id:number){\n  \tlet url = this.serverPath+\"/shipping/remove\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, id, {headers: tokenHeader});\n  }\n\n  setDefaultShipping(id:number){\n  \tlet url = this.serverPath+\"/shipping/setDefault\";\n\n  \tlet tokenHeader = new Headers({\n  \t\t'Content-Type' : 'application/json',\n  \t\t'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n  \t});\n  \treturn this.http.post(url, id, {headers: tokenHeader});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/shipping.service.ts","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport {AppConst} from '../constants/app-const';\nimport {User} from '../models/user';\n\n@Injectable()\nexport class UserService {\n  private serverPath: string = AppConst.serverPath;\n\n  constructor(private http:Http) { }\n\n  newUser(username: string, email:string) {\n    let url = this.serverPath+'/user/newUser';\n    let userInfo = {\n      \"username\" : username,\n      \"email\" : email\n    }\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.post(url, JSON.stringify(userInfo), {headers : tokenHeader});\n  }\n\n  updateUserInfo(user: User, newPassword: string, currentPassword: string) {\n    let url = this.serverPath + \"/user/updateUserInfo\";\n    let userInfo = {\n      \"id\" : user.id,\n      \"firstName\" : user.firstName,\n      \"lastName\" : user.lastName,\n      \"username\" : user.username,\n      \"currentPassword\" : currentPassword,\n      \"email\" : user.email,\n      \"newPassword\" :newPassword\n    };\n\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem(\"xAuthToken\")\n    });\n    return this.http.post(url, JSON.stringify(userInfo), {headers:tokenHeader});\n  }\n\n  retrievePassword(email:string) {\n    let url = this.serverPath+'/user/forgetPassword';\n    let userInfo = {\n      \"email\" : email\n    }\n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.post(url, JSON.stringify(userInfo), {headers : tokenHeader});\n  }\n\n  getCurrentUser() {\n    let url = this.serverPath+'/user/getCurrentUser';\n    \n    let tokenHeader = new Headers({\n      'Content-Type' : 'application/json',\n      'x-auth-token' : localStorage.getItem('xAuthToken')\n    });\n\n    return this.http.get(url, {headers : tokenHeader});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/app/services/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/sarthaksachdeva/Documents/WebDevSummer/webdev-summer2-project-angular-storefront/src/main.ts"],"sourceRoot":"webpack:///"}